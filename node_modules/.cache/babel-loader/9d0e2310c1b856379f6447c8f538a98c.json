{"ast":null,"code":"var _jsxFileName = \"/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx\";\nimport React, { useState } from 'react';\nimport { Plugins } from \"@capacitor/core\";\nimport { IonPage, IonHeader, IonToolbar, IonButton, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\nconst {\n  Geolocation\n} = Plugins;\n\nconst Tab3 = props => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [positionReady, setPositionReady] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [startPosition, setStartPosition] = useState({\n    lat: 0,\n    lng: 0,\n    time: 0\n  });\n  const [timeStatus, setTimeStatus] = useState({\n    stime: 0,\n    ftime: 0\n  });\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [watchID, setWatchID] = useState(0);\n  useIonViewDidEnter(() => {\n    startGetGPS();\n  });\n  let position1;\n\n  const startGetGPS = async () => {\n    console.log('**** startGetGPS ***');\n    setShowLoading(true);\n    position1 = await Geolocation.getCurrentPosition({\n      maximumAge: 5000,\n      timeout: 5000\n    }).then(success).catch(error => {\n      alert('Not found Position:' + error.message);\n    });\n  };\n\n  let success = position => {\n    setPositionReady(true);\n    setWatchID(position1);\n    setStartPosition({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n      time: position.timestamp\n    });\n    setCurrentPosition({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n    setTimeStatus({\n      stime: position.timestamp,\n      ftime: position.timestamp\n    });\n    setTotalDistance(0);\n    setShowLoading(false);\n  };\n\n  let watch;\n\n  let startWatchGPS = () => {\n    console.log('*** startWatchGPS **** :');\n    watch = Geolocation.watchPosition({}, watchsuccess);\n    setWatchID(watch);\n  };\n\n  let position_1 = {\n    lat: 0,\n    lng: 0\n  };\n  let position_2 = {\n    lat: 0,\n    lng: 0\n  };\n  let firstwatch = true;\n  let firstcal = true;\n  let sub_distance = 0;\n\n  let watchsuccess = (position, error) => {\n    if (firstwatch == true) {\n      position_1.lat = startPosition.lat;\n      position_2.lng = startPosition.lng;\n      firstwatch = false;\n    } else {\n      position_1.lat = position_2.lat;\n      position_1.lng = position_2.lng;\n    }\n\n    position_2.lat = position.coords.latitude;\n    position_2.lng = position.coords.longitude;\n    setCurrentPosition({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n    setTimeStatus({\n      stime: startPosition.time,\n      ftime: position.timestamp\n    });\n    console.log(\"firstcal :\", firstcal);\n\n    if (firstcal == false) {\n      sub_distance = sub_distance + distanceInKmBetweenEarthCoordinates(position_1, position_2);\n    }\n\n    setTotalDistance(sub_distance);\n    setPositionReady(true);\n    firstcal = false;\n  };\n\n  let degreesToRadians = degrees => {\n    return degrees * Math.PI / 180;\n  };\n\n  let distanceInKmBetweenEarthCoordinates = (position1, position2) => {\n    var earthRadiusKm = 6371;\n    let lat1 = position1.lat;\n    let lng1 = position1.lng;\n    let lat2 = position2.lat;\n    let lng2 = position2.lng;\n    var dLat = degreesToRadians(lat2 - lat1);\n    var dLon = degreesToRadians(lng2 - lng1);\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let distancekm = earthRadiusKm * c;\n    let d_round_to_2nd = Number(distancekm.toFixed(2));\n    return d_round_to_2nd;\n  };\n\n  let stopWatchGPS = watchid => {\n    let clearwatch = Geolocation.clearWatch(watchid);\n  };\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\n\n\n  let addZero = i => {\n    if (i < '10') {\n      i = \"0\" + i;\n    }\n\n    return i;\n  };\n\n  let getDatetime = time => {\n    let myDate = new Date(time);\n    let d = addZero(myDate.getDate());\n    let m = addZero(myDate.getMonth() + 1);\n    let y = myDate.getFullYear();\n    let h = addZero(myDate.getHours());\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec;\n    return times;\n  };\n\n  let durationtime = (timestart, timestop) => {\n    let time = timestop - timestart;\n    let mystartDate = new Date(timestart);\n    let mystopDate = new Date(timestop);\n    let myDate = new Date(time);\n    let h = addZero(myDate.getHours()) - 7;\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times;\n\n    if (h == 0) {\n      times = min + ':' + sec;\n    } else {\n      times = h + ':' + min + ':' + sec;\n    }\n\n    return times;\n  };\n\n  let calduration = () => {\n    let x = durationtime(1453467965439, 1585492636444);\n    console.log(x + \" น.\");\n  };\n\n  let calories = (distance, weight) => {\n    let cal = (weight * distance * 1.036).toFixed(2);\n    console.log(cal + \" Kcal\");\n    return cal;\n  };\n\n  let calCalories = () => {\n    let x = calories(308, 78);\n    console.log(x + \" Kcal.\");\n  };\n\n  let stopTextJSX;\n  let distanceTextJSX;\n  let start_time = getDatetime(timeStatus.stime);\n  let current_time = getDatetime(timeStatus.ftime);\n  let duration = durationtime(timeStatus.stime, timeStatus.ftime);\n\n  if (positionReady == true) {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"SLAT = \", startPosition.lat, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), \"LNG = \", startPosition.lng, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), \"Time = \", start_time, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \"CLAT = \", currentPosition.lat, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), \"LNG = \", currentPosition.lng, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \"Time = \", current_time, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), \"WatchGPS_ID = \", watchID, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), \"Dis = \", totalDistance, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), \"Duration = \", duration);\n  } else {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21 StarGetGPS \\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  return React.createElement(IonPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    translucent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(IonButton, {\n    slot: \"start\",\n    color: \"success\",\n    shape: \"round\",\n    size: \"large\",\n    onClick: () => {\n      startWatchGPS();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Start\"), React.createElement(IonButton, {\n    slot: \"end\",\n    color: \"danger\",\n    shape: \"round\",\n    size: \"large\",\n    onClick: () => {\n      stopWatchGPS(watchID);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Stop\"))), React.createElement(IonContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, stopTextJSX)), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    message: \"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E02\\u0E2D\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  })));\n};\n\nexport default Tab3;","map":{"version":3,"sources":["/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx"],"names":["React","useState","Plugins","IonPage","IonHeader","IonToolbar","IonButton","IonContent","IonLoading","useIonViewDidEnter","Geolocation","Tab3","props","showLoading","setShowLoading","positionReady","setPositionReady","currentPosition","setCurrentPosition","lat","lng","startPosition","setStartPosition","time","timeStatus","setTimeStatus","stime","ftime","totalDistance","setTotalDistance","watchID","setWatchID","startGetGPS","position1","console","log","getCurrentPosition","maximumAge","timeout","then","success","catch","error","alert","message","position","coords","latitude","longitude","timestamp","watch","startWatchGPS","watchPosition","watchsuccess","position_1","position_2","firstwatch","firstcal","sub_distance","distanceInKmBetweenEarthCoordinates","degreesToRadians","degrees","Math","PI","position2","earthRadiusKm","lat1","lng1","lat2","lng2","dLat","dLon","a","sin","cos","c","atan2","sqrt","distancekm","d_round_to_2nd","Number","toFixed","stopWatchGPS","watchid","clearwatch","clearWatch","addZero","i","getDatetime","myDate","Date","d","getDate","m","getMonth","y","getFullYear","h","getHours","min","getMinutes","sec","getSeconds","times","durationtime","timestart","timestop","mystartDate","mystopDate","calduration","x","calories","distance","weight","cal","calCalories","stopTextJSX","distanceTextJSX","start_time","current_time","duration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { locate, laptop, time, alarmOutline, star } from \"ionicons/icons\";\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\nimport { start } from 'repl';\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonIcon, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\r\nimport { RouteComponentProps, useHistory } from 'react-router';\r\nimport { strict } from 'assert';\r\nimport shareValue from \"../Models/share\";\r\nimport { get } from 'https';\r\n\r\n\r\nconst { Geolocation } = Plugins;\r\nconst Tab3: React.FC<RouteComponentProps> = (props) => {\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  const [positionReady, setPositionReady] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 0, lng: 0 });\r\n  const [startPosition, setStartPosition] = useState({ lat: 0, lng: 0 ,time: 0});\r\n  const [timeStatus, setTimeStatus] = useState({ stime: 0, ftime: 0 });\r\n  const [totalDistance, setTotalDistance] = useState(0);\r\n  const [watchID, setWatchID] = useState(0);\r\n\r\n  useIonViewDidEnter(() => {\r\n    startGetGPS();\r\n  });\r\n\r\n  let position1: any;\r\n  const startGetGPS = async () => {\r\n    console.log('**** startGetGPS ***');\r\n    setShowLoading(true)\r\n    position1 = await Geolocation.getCurrentPosition({ maximumAge: 5000, timeout: 5000 }).then(success)\r\n      .catch((error) => {\r\n        alert('Not found Position:' + error.message);\r\n      });\r\n  }\r\n\r\n  let success = (position: any) => {\r\n    setPositionReady(true);\r\n    setWatchID(position1);\r\n    setStartPosition({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n      time: position.timestamp\r\n    });\r\n    setCurrentPosition({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    });\r\n    setTimeStatus({\r\n      stime: position.timestamp,\r\n      ftime: position.timestamp\r\n    });\r\n    setTotalDistance(0);\r\n    setShowLoading(false);\r\n    \r\n  }\r\n\r\n\r\n\r\n  let watch: any;\r\n\r\n  let startWatchGPS = () => {\r\n    console.log('*** startWatchGPS **** :');\r\n    watch = Geolocation.watchPosition({}, (watchsuccess));\r\n    setWatchID(watch);\r\n  }\r\n  let position_1 = { lat: 0, lng: 0 }\r\n  let position_2 = { lat: 0, lng: 0 }\r\n  let firstwatch = true;\r\n  let firstcal = true;\r\n  let sub_distance = 0;\r\n\r\n  let watchsuccess = (position: any, error: any) => {\r\n    if (firstwatch == true) {\r\n      position_1.lat = startPosition.lat;\r\n      position_2.lng = startPosition.lng;\r\n      firstwatch = false;\r\n    }\r\n    else {\r\n      position_1.lat = position_2.lat;\r\n      position_1.lng = position_2.lng;\r\n    }\r\n    position_2.lat = position.coords.latitude;\r\n    position_2.lng = position.coords.longitude;\r\n\r\n    setCurrentPosition({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    });\r\n    setTimeStatus({\r\n      stime: startPosition.time,\r\n      ftime: position.timestamp\r\n    });\r\n    console.log(\"firstcal :\",firstcal);\r\n    if (firstcal == false) {\r\n      sub_distance = sub_distance + distanceInKmBetweenEarthCoordinates(position_1, position_2);\r\n    }\r\n    setTotalDistance(sub_distance);\r\n    setPositionReady(true);\r\n    firstcal = false;\r\n  }\r\n\r\n  let degreesToRadians = (degrees: any) => {\r\n    return degrees * Math.PI / 180;\r\n  }\r\n\r\n  let distanceInKmBetweenEarthCoordinates = (position1: any, position2: any) => {\r\n    var earthRadiusKm = 6371;\r\n    let lat1 = position1.lat;\r\n    let lng1 = position1.lng;\r\n    let lat2 = position2.lat;\r\n    let lng2 = position2.lng;\r\n    var dLat = degreesToRadians(lat2 - lat1);\r\n    var dLon = degreesToRadians(lng2 - lng1);\r\n\r\n    lat1 = degreesToRadians(lat1);\r\n    lat2 = degreesToRadians(lat2);\r\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let distancekm = earthRadiusKm * c;\r\n    let d_round_to_2nd = Number(distancekm.toFixed(2));\r\n\r\n    return d_round_to_2nd;\r\n  }\r\n\r\n\r\n\r\n  let stopWatchGPS = (watchid: any) => {\r\n    let clearwatch = Geolocation.clearWatch(watchid);\r\n  }\r\n\r\n\r\n\r\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\r\n  let addZero = (i: any) => {\r\n    if (i < '10') {\r\n      i = \"0\" + i;\r\n    }\r\n    return i;\r\n  }\r\n\r\n  let getDatetime = (time: any) => {\r\n    let myDate = new Date(time);\r\n    let d = addZero(myDate.getDate());\r\n    let m = addZero((myDate.getMonth()) + 1);\r\n    let y = myDate.getFullYear();\r\n    let h = addZero(myDate.getHours());\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec\r\n    return times;\r\n  };\r\n\r\n  let durationtime = (timestart: any, timestop: any) => {\r\n    let time = timestop - timestart;\r\n    let mystartDate = new Date(timestart);\r\n    let mystopDate = new Date(timestop);\r\n    let myDate = new Date(time);\r\n    let h = addZero(myDate.getHours()) - 7;\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times;\r\n    if (h == 0) {\r\n      times = min + ':' + sec\r\n    } else {\r\n      times = h + ':' + min + ':' + sec\r\n    }\r\n    return times;\r\n  };\r\n\r\n  let calduration = () => {\r\n    let x = durationtime(1453467965439, 1585492636444);\r\n    console.log(x + \" น.\")\r\n  }\r\n\r\n  let calories = (distance: any, weight: any) => {\r\n\r\n    let cal = (weight * distance * 1.036).toFixed(2)\r\n    console.log(cal + \" Kcal\")\r\n    return cal;\r\n\r\n  };\r\n  let calCalories = () => {\r\n    let x = calories(308, 78);\r\n    console.log(x + \" Kcal.\")\r\n  }\r\n\r\n  \r\n  let stopTextJSX;\r\n  let distanceTextJSX;\r\n  let start_time = getDatetime(timeStatus.stime);\r\n  let current_time = getDatetime(timeStatus.ftime);\r\n  let duration = durationtime(timeStatus.stime, timeStatus.ftime);\r\n\r\n  if (positionReady == true) {\r\n    stopTextJSX = <p>\r\n      SLAT = {startPosition.lat} <br></br>\r\n      LNG = {startPosition.lng} <br></br>\r\n      Time = {start_time} <br></br>\r\n      <br></br>\r\n      CLAT = {currentPosition.lat} <br></br>\r\n      LNG = {currentPosition.lng} <br></br>\r\n      Time = {current_time}<br></br>\r\n      <br></br>\r\n      WatchGPS_ID = {watchID}<br></br>\r\n      <br></br>\r\n      Dis = {totalDistance}<br></br>\r\n      Duration = {duration}\r\n    </p>\r\n  } else {\r\n    stopTextJSX = <p>กดปุ่ม StarGetGPS เพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader translucent={true}>\r\n        <IonToolbar>\r\n          <IonButton slot=\"start\" color=\"success\" shape=\"round\" size=\"large\" onClick={() => { startWatchGPS()}} >Start</IonButton>\r\n          <IonButton slot=\"end\" color=\"danger\" shape=\"round\" size=\"large\" onClick={() => { stopWatchGPS(watchID) }}>Stop</IonButton>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <body >\r\n          <div>\r\n            {stopTextJSX}\r\n          </div>\r\n        </body>\r\n        <IonLoading isOpen={showLoading} message=\"กำลังขอพิกัด\" />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\nexport default Tab3;"]},"metadata":{},"sourceType":"module"}