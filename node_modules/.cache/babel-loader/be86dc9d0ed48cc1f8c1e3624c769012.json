{"ast":null,"code":"var _jsxFileName = \"/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx\";\nimport React, { useState } from 'react';\nimport { Plugins } from \"@capacitor/core\";\nimport { IonPage, IonHeader, IonToolbar, IonButton, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\nconst {\n  Geolocation\n} = Plugins;\n\nconst Tab3 = props => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [positionReady, setPositionReady] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [startPosition, setStartPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [timeStatus, setTimeStatus] = useState({\n    stime: 0,\n    ftime: 0\n  });\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [watchID, setWatchID] = useState(0);\n  useIonViewDidEnter(() => {\n    startGetGPS();\n  }); // const startGetGPS = async () => {\n  //   console.log('Getting...startGetGPS');\n  //   setShowLoading(true);\n  //   let position1 = await Geolocation.getCurrentPosition();\n  //   setShowLoading(false);\n  //   setPositionReady(true);\n  //   setCurrentPosition({\n  //     lat: position1.coords.latitude,\n  //     lng: position1.coords.longitude,\n  //     time : position1.timestamp\n  //   });\n  //   if (startReady == true) {\n  //     setStartPosition({\n  //       lat: position1.coords.latitude,\n  //       lng: position1.coords.longitude\n  //     })\n  //     setStartReady(false);\n  //   }\n  //   // let lat = position1.coords.latitude;\n  //   // let lng = position1.coords.longitude;\n  //   console.log('Current startGetGPS', startPosition.lat, startPosition.lng);\n  //}\n\n  let position1;\n\n  const startGetGPS = async () => {\n    console.log('**** startGetGPS ***');\n    setShowLoading(true);\n    position1 = await Geolocation.getCurrentPosition({\n      maximumAge: 5000,\n      timeout: 5000\n    }).then(success) // setPositionReady(true);\n    // setStartPosition({\n    //   lat: position.coords.latitude,\n    //   lng: position.coords.longitude,\n    //   time: position.timestamp\n    // });\n    // setCurrentPosition({\n    //   lat: position.coords.latitude,\n    //   lng: position.coords.longitude,\n    //   time: position.timestamp\n    // });\n    // let lat = position.coords.latitude;\n    // let lng = position.coords.longitude;\n    // setShowLoading(false);\n    .catch(error => {\n      //console.log('ไม่สามารถหาพิกัดได้ :', error.message);\n      alert('Not found Position:' + error.message);\n    });\n  };\n\n  let success = position => {\n    setPositionReady(true);\n    setWatchID(position1);\n    setStartPosition({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n    setCurrentPosition({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n    setTimeStatus({\n      stime: position.timestamp,\n      ftime: position.timestamp\n    });\n    setTotalDistance(0); // let lat = position.coords.latitude;\n    // let lng = position.coords.longitude;\n\n    setShowLoading(false);\n  };\n\n  let watch;\n\n  let startWatchGPS = () => {\n    console.log('*** startWatchGPS **** :');\n    watch = Geolocation.watchPosition({}, watchsuccess);\n    setWatchID(watch); //watch = Geolocation.watchPosition({}, (position, error) => {\n    // {maximumAge:5000,timeout:5000}\n    // setCurrentPosition({\n    //   lat: position.coords.latitude,\n    //   lng: position.coords.longitude,\n    //   time: position.timestamp\n    // });\n    //sub_distance = sub_distance + findDistance(position_1, position_2);\n    //setPositionReady(true);\n    //})\n  };\n\n  let position_1 = {\n    lat: 0,\n    lng: 0\n  };\n  let position_2 = {\n    lat: 0,\n    lng: 0\n  };\n  let firstwatch = true;\n  let sub_distance = 0;\n\n  let watchsuccess = (position, error) => {\n    if (firstwatch == true) {\n      position_1.lat = startPosition.lat;\n      position_2.lng = startPosition.lng;\n      firstwatch = false;\n    } else {\n      position_1.lat = position_2.lat;\n      position_2.lng = position_2.lng;\n    }\n\n    position_2.lat = position.coords.latitude;\n    position_2.lng = position.coords.longitude;\n    setCurrentPosition({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n    setTimeStatus({\n      stime: timeStatus.stime,\n      ftime: position.timestamp\n    });\n    console.log('position 1:', position_1.lat, position_2.lng);\n    console.log('position_2:', position_2.lat, position_2.lng);\n    console.log('first_dis', sub_distance);\n    setTotalDistance(distanceInKmBetweenEarthCoordinates(position_1.lat, position_1.lng, position_2.lat, position_2.lng));\n    setTotalDistance(distanceInKmBetweenEarthCoordinates(6.958473, 100.427079, 6.937047, 100.393648)); //console.log('distance', sub_distance);\n    //setTotalDistance(sub_distance);\n\n    setPositionReady(true);\n  }; //let findDistance = (position1: any, position2: any) => {\n\n\n  let findDistance = (lat1, lng1, lat2, lng2) => {\n    let R = 6373; // km\n    // let lat1 = position1.lat;\n    // let lng1 = position1.lng;\n    // let lat2 = position2.lat;\n    // let lng2 = position2.lng;\n\n    let dLat = toRad(lat2 - lat1);\n    let dLng = toRad(lng2 - lng1);\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let d = R * c;\n\n    function toRad(Value) {\n      /** Converts numeric degrees to radians */\n      return Value * Math.PI / 180;\n    }\n    /* ทศนิยม 2 ตำแหน่ง */\n\n\n    let d_round_to_2nd = Number(d.toFixed(2));\n    console.log('d_round :', d_round_to_2nd);\n    return d_round_to_2nd; //return d;\n  };\n\n  let degreesToRadians = degrees => {\n    return degrees * Math.PI / 180;\n  };\n\n  let distanceInKmBetweenEarthCoordinates = (lat1, lng1, lat2, lng2) => {\n    var earthRadiusKm = 6371;\n    console.log('lat1:', lat1, 'lng1:', lng1, 'lat2:', lat2, 'lng2:', lng2);\n    var dLat = degreesToRadians(lat2 - lat1);\n    var dLon = degreesToRadians(lng2 - lng1);\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n    console.log('lat1 :', lat1);\n    console.log('lat2 :', lat2);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);\n    console.log('var a:', a);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    console.log('var c:', c);\n    console.log('cal :', earthRadiusKm * c);\n    return earthRadiusKm * c;\n  };\n\n  let stopWatchGPS = watchid => {\n    alert('StopWatch id : ' + watchid);\n    let clearwatch = Geolocation.clearWatch(watchid);\n  };\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\n\n\n  let addZero = i => {\n    if (i < '10') {\n      i = \"0\" + i;\n    }\n\n    return i;\n  };\n\n  let getDatetime = time => {\n    let myDate = new Date(time);\n    let d = addZero(myDate.getDate());\n    let m = addZero(myDate.getMonth() + 1);\n    let y = myDate.getFullYear();\n    let h = addZero(myDate.getHours());\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec;\n    return times;\n  };\n\n  let durationtime = (timestart, timestop) => {\n    let time = timestop - timestart;\n    let mystartDate = new Date(timestart);\n    let mystopDate = new Date(timestop);\n    let myDate = new Date(time);\n    let h = addZero(myDate.getHours()) - 7;\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times;\n\n    if (h == 0) {\n      times = min + ':' + sec;\n    } else {\n      times = h + ':' + min + ':' + sec;\n    }\n\n    return times;\n  };\n\n  let calduration = () => {\n    let x = durationtime(1453467965439, 1585492636444);\n    console.log(x + \" น.\");\n  };\n\n  let calories = (distance, weight) => {\n    let cal = (weight * distance * 1.036).toFixed(2);\n    console.log(cal + \" Kcal\");\n    return cal;\n  };\n\n  let calCalories = () => {\n    let x = calories(308, 78);\n    console.log(x + \" Kcal.\");\n  };\n\n  let startTextJSX;\n\n  if (positionReady == true) {\n    startTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, currentPosition.lat, \",\", currentPosition.lng);\n  } else {\n    startTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  let stopTextJSX;\n  let distanceTextJSX;\n  let start_time = getDatetime(timeStatus.stime);\n  let current_time = getDatetime(timeStatus.ftime);\n\n  if (positionReady == true) {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"SLAT = \", startPosition.lat, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), \"LNG = \", startPosition.lng, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), \"Time = \", start_time, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), \"CLAT = \", currentPosition.lat, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), \"LNG = \", currentPosition.lng, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), \"Time = \", current_time, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), \"WatchID = \", watchID, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), \"Dis = \", totalDistance);\n  } else {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  return React.createElement(IonPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    translucent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(IonButton, {\n    slot: \"start\",\n    color: \"primary\",\n    shape: \"round\",\n    size: \"large\",\n    onClick: () => {\n      startWatchGPS();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, \"WatchGPS\"), React.createElement(IonButton, {\n    slot: \"end\",\n    color: \"secondary\",\n    shape: \"round\",\n    size: \"large\",\n    onClick: () => {\n      stopWatchGPS(watchID);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, \"StopGPS\"))), React.createElement(IonContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, stopTextJSX)), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    message: \"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E02\\u0E2D\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  })));\n};\n\nexport default Tab3;","map":{"version":3,"sources":["/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx"],"names":["React","useState","Plugins","IonPage","IonHeader","IonToolbar","IonButton","IonContent","IonLoading","useIonViewDidEnter","Geolocation","Tab3","props","showLoading","setShowLoading","positionReady","setPositionReady","currentPosition","setCurrentPosition","lat","lng","startPosition","setStartPosition","timeStatus","setTimeStatus","stime","ftime","totalDistance","setTotalDistance","watchID","setWatchID","startGetGPS","position1","console","log","getCurrentPosition","maximumAge","timeout","then","success","catch","error","alert","message","position","coords","latitude","longitude","timestamp","watch","startWatchGPS","watchPosition","watchsuccess","position_1","position_2","firstwatch","sub_distance","distanceInKmBetweenEarthCoordinates","findDistance","lat1","lng1","lat2","lng2","R","dLat","toRad","dLng","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI","d_round_to_2nd","Number","toFixed","degreesToRadians","degrees","earthRadiusKm","dLon","stopWatchGPS","watchid","clearwatch","clearWatch","addZero","i","getDatetime","time","myDate","Date","getDate","m","getMonth","y","getFullYear","h","getHours","min","getMinutes","sec","getSeconds","times","durationtime","timestart","timestop","mystartDate","mystopDate","calduration","x","calories","distance","weight","cal","calCalories","startTextJSX","stopTextJSX","distanceTextJSX","start_time","current_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { locate, laptop, time, alarmOutline, star } from \"ionicons/icons\";\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\nimport { start } from 'repl';\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonIcon, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\r\nimport { RouteComponentProps, useHistory } from 'react-router';\r\nimport { strict } from 'assert';\r\nimport shareValue from \"../Models/share\";\r\nimport { get } from 'https';\r\n\r\n\r\nconst { Geolocation } = Plugins;\r\nconst Tab3: React.FC<RouteComponentProps> = (props) => {\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  const [positionReady, setPositionReady] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 0, lng: 0});\r\n  const [startPosition, setStartPosition] = useState({ lat: 0, lng: 0});\r\n  const [timeStatus, setTimeStatus] = useState({stime :0,ftime:0});\r\n  const [totalDistance, setTotalDistance] = useState(0);\r\n  const [watchID, setWatchID] = useState(0);\r\n\r\n  useIonViewDidEnter(() => {\r\n    startGetGPS();\r\n  });\r\n\r\n  // const startGetGPS = async () => {\r\n  //   console.log('Getting...startGetGPS');\r\n  //   setShowLoading(true);\r\n  //   let position1 = await Geolocation.getCurrentPosition();\r\n  //   setShowLoading(false);\r\n  //   setPositionReady(true);\r\n  //   setCurrentPosition({\r\n  //     lat: position1.coords.latitude,\r\n  //     lng: position1.coords.longitude,\r\n  //     time : position1.timestamp\r\n  //   });\r\n\r\n  //   if (startReady == true) {\r\n\r\n  //     setStartPosition({\r\n  //       lat: position1.coords.latitude,\r\n  //       lng: position1.coords.longitude\r\n\r\n  //     })\r\n  //     setStartReady(false);\r\n  //   }\r\n  //   // let lat = position1.coords.latitude;\r\n  //   // let lng = position1.coords.longitude;\r\n  //   console.log('Current startGetGPS', startPosition.lat, startPosition.lng);\r\n\r\n\r\n  //}\r\n\r\n  let position1: any;\r\n  const startGetGPS = async () => {\r\n    console.log('**** startGetGPS ***');\r\n    setShowLoading(true)\r\n    position1 = await Geolocation.getCurrentPosition({ maximumAge: 5000, timeout: 5000 }).then(success)\r\n      // setPositionReady(true);\r\n      // setStartPosition({\r\n      //   lat: position.coords.latitude,\r\n      //   lng: position.coords.longitude,\r\n      //   time: position.timestamp\r\n      // });\r\n      // setCurrentPosition({\r\n      //   lat: position.coords.latitude,\r\n      //   lng: position.coords.longitude,\r\n      //   time: position.timestamp\r\n      // });\r\n      // let lat = position.coords.latitude;\r\n      // let lng = position.coords.longitude;\r\n      // setShowLoading(false);\r\n\r\n      .catch((error) => {\r\n        //console.log('ไม่สามารถหาพิกัดได้ :', error.message);\r\n        alert('Not found Position:' + error.message);\r\n      });\r\n  }\r\n\r\n  let success = (position: any) => {\r\n    setPositionReady(true);\r\n    setWatchID(position1);\r\n    setStartPosition({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n      });\r\n    setCurrentPosition({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    });\r\n\r\n    setTimeStatus({\r\n      stime: position.timestamp,\r\n      ftime: position.timestamp\r\n    });\r\n    setTotalDistance(0);\r\n    // let lat = position.coords.latitude;\r\n    // let lng = position.coords.longitude;\r\n\r\n    setShowLoading(false);\r\n  }\r\n\r\n\r\n\r\n  let watch: any;\r\n\r\n  let startWatchGPS = () => {\r\n    console.log('*** startWatchGPS **** :');\r\n    watch = Geolocation.watchPosition({}, (watchsuccess));\r\n    setWatchID(watch);\r\n    //watch = Geolocation.watchPosition({}, (position, error) => {\r\n    // {maximumAge:5000,timeout:5000}\r\n    // setCurrentPosition({\r\n    //   lat: position.coords.latitude,\r\n    //   lng: position.coords.longitude,\r\n    //   time: position.timestamp\r\n    // });\r\n    //sub_distance = sub_distance + findDistance(position_1, position_2);\r\n    //setPositionReady(true);\r\n\r\n    //})\r\n  }\r\n  let position_1 = { lat:0, lng:0 }\r\n  let position_2 = { lat: 0, lng: 0 }\r\n  let firstwatch = true;\r\n  let sub_distance = 0;\r\n\r\n  let watchsuccess = (position: any, error: any) => {\r\n    if (firstwatch == true) {\r\n      position_1.lat = startPosition.lat;\r\n      position_2.lng = startPosition.lng;\r\n      firstwatch = false;\r\n    }\r\n    else {\r\n      position_1.lat = position_2.lat;\r\n      position_2.lng = position_2.lng;\r\n    }\r\n    position_2.lat = position.coords.latitude;\r\n    position_2.lng = position.coords.longitude;\r\n\r\n    setCurrentPosition({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude,\r\n    });\r\n    setTimeStatus({\r\n      stime: timeStatus.stime,\r\n      ftime: position.timestamp\r\n    });\r\n\r\n    console.log('position 1:', position_1.lat, position_2.lng);\r\n    console.log('position_2:', position_2.lat, position_2.lng);\r\n    console.log('first_dis', sub_distance);\r\n    setTotalDistance(distanceInKmBetweenEarthCoordinates(position_1.lat,position_1.lng, position_2.lat,position_2.lng));\r\n    setTotalDistance(distanceInKmBetweenEarthCoordinates(6.958473,100.427079,6.937047,100.393648));\r\n    //console.log('distance', sub_distance);\r\n    //setTotalDistance(sub_distance);\r\n    setPositionReady(true);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //let findDistance = (position1: any, position2: any) => {\r\n  let findDistance = (lat1: any, lng1: any, lat2: any, lng2: any) => {\r\n    let R = 6373; // km\r\n    // let lat1 = position1.lat;\r\n    // let lng1 = position1.lng;\r\n    // let lat2 = position2.lat;\r\n    // let lng2 = position2.lng;\r\n    let dLat = toRad((lat2 - lat1));\r\n    let dLng = toRad((lng2 - lng1));\r\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) *\r\n      Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let d = R * c;\r\n    function toRad(Value: any) {\r\n      /** Converts numeric degrees to radians */\r\n      return Value * Math.PI / 180;\r\n    }\r\n    /* ทศนิยม 2 ตำแหน่ง */\r\n    let d_round_to_2nd = Number(d.toFixed(2));\r\n    console.log('d_round :', d_round_to_2nd);\r\n    return d_round_to_2nd;\r\n    //return d;\r\n  };\r\n\r\n  let degreesToRadians = (degrees:any)=> {\r\n    return degrees * Math.PI / 180;\r\n  }\r\n  \r\n  let distanceInKmBetweenEarthCoordinates = (lat1: any, lng1: any, lat2: any, lng2: any) => {\r\n    var earthRadiusKm = 6371;\r\n    console.log('lat1:',lat1,'lng1:',lng1,'lat2:',lat2,'lng2:',lng2);\r\n    var dLat = degreesToRadians(lat2-lat1);\r\n    var dLon = degreesToRadians(lng2-lng1);\r\n  \r\n    lat1 = degreesToRadians(lat1);\r\n    lat2 = degreesToRadians(lat2);\r\n    console.log('lat1 :',lat1);\r\n    console.log('lat2 :',lat2);\r\n  \r\n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n            Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n    console.log('var a:',a);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    console.log('var c:',c);\r\n    console.log('cal :',earthRadiusKm * c);\r\n    return earthRadiusKm * c;\r\n  }\r\n\r\n\r\n\r\n  let stopWatchGPS = (watchid: any) => {\r\n    alert('StopWatch id : ' + watchid);\r\n    let clearwatch = Geolocation.clearWatch(watchid);\r\n  }\r\n\r\n\r\n\r\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\r\n  let addZero = (i: any) => {\r\n    if (i < '10') {\r\n      i = \"0\" + i;\r\n    }\r\n    return i;\r\n  }\r\n\r\n  let getDatetime = (time: any) => {\r\n    let myDate = new Date(time);\r\n    let d = addZero(myDate.getDate());\r\n    let m = addZero((myDate.getMonth()) + 1);\r\n    let y = myDate.getFullYear();\r\n    let h = addZero(myDate.getHours());\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec\r\n    return times;\r\n  };\r\n\r\n  let durationtime = (timestart: any, timestop: any) => {\r\n    let time = timestop - timestart;\r\n    let mystartDate = new Date(timestart);\r\n    let mystopDate = new Date(timestop);\r\n    let myDate = new Date(time);\r\n    let h = addZero(myDate.getHours()) - 7;\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times;\r\n    if (h == 0) {\r\n      times = min + ':' + sec\r\n    } else {\r\n      times = h + ':' + min + ':' + sec\r\n    }\r\n    return times;\r\n  };\r\n\r\n  let calduration = () => {\r\n    let x = durationtime(1453467965439, 1585492636444);\r\n    console.log(x + \" น.\")\r\n  }\r\n\r\n  let calories = (distance: any, weight: any) => {\r\n\r\n    let cal = (weight * distance * 1.036).toFixed(2)\r\n    console.log(cal + \" Kcal\")\r\n    return cal;\r\n\r\n  };\r\n  let calCalories = () => {\r\n    let x = calories(308, 78);\r\n    console.log(x + \" Kcal.\")\r\n  }\r\n\r\n  let startTextJSX;\r\n\r\n  if (positionReady == true) {\r\n    startTextJSX = <p>{currentPosition.lat},{currentPosition.lng}</p>\r\n  }\r\n  else {\r\n    startTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n  let stopTextJSX;\r\n  let distanceTextJSX;\r\n  let start_time = getDatetime(timeStatus.stime);\r\n  let current_time = getDatetime(timeStatus.ftime);\r\n\r\n  if (positionReady == true) {\r\n    stopTextJSX = <p>\r\n      SLAT = {startPosition.lat} <br></br>\r\n      LNG = {startPosition.lng} <br></br>\r\n      Time = {start_time} <br></br>\r\n      <br></br>\r\n      CLAT = {currentPosition.lat} <br></br>\r\n      LNG = {currentPosition.lng} <br></br>\r\n      Time = {current_time}<br></br>\r\n      WatchID = {watchID}\r\n      <br></br>\r\n      Dis = {totalDistance}\r\n    </p>\r\n  } else {\r\n    stopTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader translucent={true}>\r\n        <IonToolbar>\r\n          <IonButton slot=\"start\" color=\"primary\" shape=\"round\" size=\"large\" onClick={() => { startWatchGPS() }} >WatchGPS</IonButton>\r\n          <IonButton slot=\"end\" color=\"secondary\" shape=\"round\" size=\"large\" onClick={() => { stopWatchGPS(watchID) }}>StopGPS</IonButton>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <body >\r\n          <div>\r\n            {stopTextJSX}\r\n          </div>\r\n        </body>\r\n        <IonLoading isOpen={showLoading} message=\"กำลังขอพิกัด\" />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\nexport default Tab3;"]},"metadata":{},"sourceType":"module"}