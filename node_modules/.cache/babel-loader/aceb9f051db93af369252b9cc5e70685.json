{"ast":null,"code":"var _jsxFileName = \"/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx\";\nimport React, { useState } from 'react';\nimport { Plugins } from \"@capacitor/core\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\nconst {\n  Geolocation\n} = Plugins;\n\nconst Tab3 = props => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [positionReady, setPositionReady] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 0,\n    lng: 0,\n    acc: 0,\n    time: 0\n  });\n  const [startPosition, setStartPosition] = useState({\n    lat: 0,\n    lng: 0,\n    acc: 0,\n    time: 0\n  });\n  const [startReady, setStartReady] = useState(true);\n  const [startStatus, setStartStatus] = useState({\n    time: 0\n  });\n  const [totalDistance, setTotalDistance] = useState(0);\n  useIonViewDidEnter(() => {\n    getDistance();\n  });\n\n  const startGetGPS = async () => {\n    console.log('Getting...startGetGPS');\n    setShowLoading(true);\n    let position1 = await Geolocation.getCurrentPosition();\n    setShowLoading(false);\n    setPositionReady(true);\n    setCurrentPosition({\n      lat: position1.coords.latitude,\n      lng: position1.coords.longitude,\n      acc: position1.coords.accuracy,\n      time: position1.timestamp\n    });\n\n    if (startReady == true) {\n      setStartStatus({\n        time: position1.timestamp\n      });\n      setStartPosition({\n        lat: position1.coords.latitude,\n        lng: position1.coords.longitude,\n        acc: position1.coords.accuracy,\n        time: position1.timestamp\n      });\n      setStartReady(false);\n    } // let lat = position1.coords.latitude;\n    // let lng = position1.coords.longitude;\n\n\n    console.log('Current startGetGPS', startPosition.lat, startPosition.lng);\n  };\n\n  const getDistance = async () => {\n    console.log('Getting geolocation....getDistance');\n    let position1 = await Geolocation.getCurrentPosition();\n    setPositionReady(true);\n    setCurrentPosition({\n      lat: position1.coords.latitude,\n      lng: position1.coords.longitude,\n      acc: position1.coords.accuracy,\n      time: position1.timestamp\n    });\n    let lat = position1.coords.latitude;\n    let lng = position1.coords.longitude;\n    let datetime = getDatetime(position1.timestamp);\n    alert(\"lat :\" + lat + \" lng :\" + lng + \" date :\" + datetime);\n  };\n\n  let stopWatchGPS = watchid => {\n    Geolocation.clearWatch(watchid);\n  };\n\n  let watch1;\n\n  let startWatchGPS = () => {\n    console.log('Watching geolocation...startWatchGPS');\n    watch1 = Geolocation.watchPosition({}, (position, error) => {\n      console.log('watch1 :', watch1);\n      console.log('new position startWatchGPS', position);\n      setPositionReady(true);\n      setStartPosition({\n        lat: currentPosition.lat,\n        lng: currentPosition.lng,\n        acc: currentPosition.acc,\n        time: currentPosition.time\n      });\n      setCurrentPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        acc: position.coords.accuracy,\n        time: position.timestamp\n      });\n    });\n  };\n\n  let findDistance = (lat1, lon1, lat2, lon2) => {\n    let R = 6373; // km\n\n    let dLat = toRad(lat2 - lat1);\n    let dLon = toRad(lon2 - lon1);\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let d = R * c;\n\n    function toRad(Value) {\n      /** Converts numeric degrees to radians */\n      return Value * Math.PI / 180;\n    }\n    /* ทศนิยม 2 ตำแหน่ง */\n\n\n    let d_round_to_2nd = Number(d.toFixed(2));\n    return d_round_to_2nd;\n  };\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\n\n\n  let addZero = i => {\n    if (i < '10') {\n      i = \"0\" + i;\n    }\n\n    return i;\n  };\n\n  let getDatetime = time => {\n    let myDate = new Date(time);\n    let d = addZero(myDate.getDate());\n    let m = addZero(myDate.getMonth() + 1);\n    let y = myDate.getFullYear();\n    let h = addZero(myDate.getHours());\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec;\n    console.log('DateTime', times);\n    return times;\n  };\n\n  let durationtime = (timestart, timestop) => {\n    let time = timestop - timestart;\n    let mystartDate = new Date(timestart);\n    let mystopDate = new Date(timestop);\n    let myDate = new Date(time);\n    let h = addZero(myDate.getHours()) - 7;\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times;\n\n    if (h == 0) {\n      times = min + ':' + sec;\n    } else {\n      times = h + ':' + min + ':' + sec;\n    }\n\n    console.log('Time Start :', mystartDate);\n    console.log('Time Stop :', mystopDate);\n    console.log('Diff Time :', h, ':', min, ':', sec);\n    console.log(times);\n    return times;\n  };\n\n  let calduration = () => {\n    let x = durationtime(1453467965439, 1585492636444);\n    console.log(x + \" น.\");\n  };\n\n  let calories = (distance, weight) => {\n    let cal = (weight * distance * 1.036).toFixed(2);\n    console.log(cal + \" Kcal\");\n    return cal;\n  };\n\n  let calCalories = () => {\n    let x = calories(308, 78);\n    console.log(x + \" Kcal.\");\n  };\n\n  let startTextJSX;\n\n  if (positionReady == true) {\n    startTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, currentPosition.lat, \",\", currentPosition.lng, \",\", currentPosition.time);\n  } else {\n    startTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  let stopTextJSX;\n  let distanceTextJSX;\n  let starttime = getDatetime(startStatus.time);\n  let stoptime = getDatetime(currentPosition.time);\n  let duration = durationtime(startStatus.time, currentPosition.time);\n  let distance = findDistance(startPosition.lat, startPosition.lng, currentPosition.lat, currentPosition.lng);\n\n  if (positionReady == true) {// stopTextJSX = <p>LastPosition = {startPosition.lat}<br></br>\n    //                 latitude = {startPosition.lng}<br></br>\n    //                 Time = {starttime}<br></br>\n    //                 CurrentPosition = {currentPosition.lat}<br></br>\n    //                 latitude = {currentPosition.lng}<br></br>\n    //                 timestamp = {stoptime}<br></br>\n    //                 duration = {duration}</p>\n    // distanceTextJSX = <p>totalDistance = {distance}</p>\n  } else {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  return React.createElement(IonPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    translucent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(IonTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"Easy Running#1\"), React.createElement(IonButtons, {\n    slot: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(IonButton, {\n    expand: \"full\",\n    color: \"primary\",\n    shape: \"round\",\n    slot: \"start\",\n    size: \"large\",\n    onClick: startWatchGPS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, \"WatchGPS\"), React.createElement(IonButton, {\n    expand: \"block\",\n    color: \"secondary\",\n    shape: \"round\",\n    slot: \"start\",\n    size: \"large\",\n    onClick: stopWatchGPS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"StopGPS\")))), React.createElement(IonContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: '90vh',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, stopTextJSX, distanceTextJSX)), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    message: \"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E02\\u0E2D\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  })));\n};\n\nexport default Tab3;","map":{"version":3,"sources":["/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx"],"names":["React","useState","Plugins","IonPage","IonHeader","IonToolbar","IonTitle","IonButton","IonButtons","IonContent","IonLoading","useIonViewDidEnter","Geolocation","Tab3","props","showLoading","setShowLoading","positionReady","setPositionReady","currentPosition","setCurrentPosition","lat","lng","acc","time","startPosition","setStartPosition","startReady","setStartReady","startStatus","setStartStatus","totalDistance","setTotalDistance","getDistance","startGetGPS","console","log","position1","getCurrentPosition","coords","latitude","longitude","accuracy","timestamp","datetime","getDatetime","alert","stopWatchGPS","watchid","clearWatch","watch1","startWatchGPS","watchPosition","position","error","findDistance","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI","d_round_to_2nd","Number","toFixed","addZero","i","myDate","Date","getDate","m","getMonth","y","getFullYear","h","getHours","min","getMinutes","sec","getSeconds","times","durationtime","timestart","timestop","mystartDate","mystopDate","calduration","x","calories","distance","weight","cal","calCalories","startTextJSX","stopTextJSX","distanceTextJSX","starttime","stoptime","duration","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAIA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,UAA7B,EAAyCC,QAAzC,EAAmDC,SAAnD,EAAuEC,UAAvE,EAAmFC,UAAnF,EAA+FC,UAA/F,EAA2GC,kBAA3G,QAAqI,cAArI;AAMA,MAAM;AAAEC,EAAAA;AAAF,IAAkBV,OAAxB;;AACA,MAAMW,IAAmC,GAAIC,KAAD,IAAW;AACrD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC;AAAEoB,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,CAAvB;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAAD,CAAtD;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC;AAAEoB,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,GAAG,EAAE,CAAf;AAAkBC,IAAAA,GAAG,EAAE,CAAvB;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAAD,CAAlD;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC;AAAEuB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAA9C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,CAAD,CAAlD;AAMAU,EAAAA,kBAAkB,CAAC,MAAM;AACvBsB,IAAAA,WAAW;AAEZ,GAHiB,CAAlB;;AAOA,QAAMC,WAAW,GAAG,YAAY;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACApB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,QAAIqB,SAAS,GAAG,MAAMzB,WAAW,CAAC0B,kBAAZ,EAAtB;AACAtB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,kBAAkB,CAAC;AACjBC,MAAAA,GAAG,EAAEgB,SAAS,CAACE,MAAV,CAAiBC,QADL;AAEjBlB,MAAAA,GAAG,EAAEe,SAAS,CAACE,MAAV,CAAiBE,SAFL;AAGjBlB,MAAAA,GAAG,EAAEc,SAAS,CAACE,MAAV,CAAiBG,QAHL;AAIjBlB,MAAAA,IAAI,EAAEa,SAAS,CAACM;AAJC,KAAD,CAAlB;;AAOA,QAAIhB,UAAU,IAAI,IAAlB,EAAwB;AACtBG,MAAAA,cAAc,CAAC;AACbN,QAAAA,IAAI,EAAEa,SAAS,CAACM;AADH,OAAD,CAAd;AAGAjB,MAAAA,gBAAgB,CAAC;AACfL,QAAAA,GAAG,EAAEgB,SAAS,CAACE,MAAV,CAAiBC,QADP;AAEflB,QAAAA,GAAG,EAAEe,SAAS,CAACE,MAAV,CAAiBE,SAFP;AAGflB,QAAAA,GAAG,EAAEc,SAAS,CAACE,MAAV,CAAiBG,QAHP;AAIflB,QAAAA,IAAI,EAAEa,SAAS,CAACM;AAJD,OAAD,CAAhB;AAMAf,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAxB6B,CAyB9B;AACA;;;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCX,aAAa,CAACJ,GAAjD,EAAsDI,aAAa,CAACH,GAApE;AAGD,GA9BD;;AA+BA,QAAMW,WAAW,GAAG,YAAY;AAC9BE,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,QAAIC,SAAS,GAAG,MAAMzB,WAAW,CAAC0B,kBAAZ,EAAtB;AACApB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,kBAAkB,CAAC;AACjBC,MAAAA,GAAG,EAAEgB,SAAS,CAACE,MAAV,CAAiBC,QADL;AAEjBlB,MAAAA,GAAG,EAAEe,SAAS,CAACE,MAAV,CAAiBE,SAFL;AAGjBlB,MAAAA,GAAG,EAAEc,SAAS,CAACE,MAAV,CAAiBG,QAHL;AAIjBlB,MAAAA,IAAI,EAAEa,SAAS,CAACM;AAJC,KAAD,CAAlB;AAMA,QAAItB,GAAG,GAAGgB,SAAS,CAACE,MAAV,CAAiBC,QAA3B;AACA,QAAIlB,GAAG,GAAGe,SAAS,CAACE,MAAV,CAAiBE,SAA3B;AACA,QAAIG,QAAQ,GAAGC,WAAW,CAACR,SAAS,CAACM,SAAX,CAA1B;AACAG,IAAAA,KAAK,CAAC,UAAQzB,GAAR,GAAY,QAAZ,GAAqBC,GAArB,GAAyB,SAAzB,GAAoCsB,QAArC,CAAL;AACC,GAdH;;AAgBA,MAAIG,YAAY,GAAGC,OAAD,IAAgB;AAClCpC,IAAAA,WAAW,CAACqC,UAAZ,CAAuBD,OAAvB;AAGC,GAJD;;AAQA,MAAIE,MAAJ;;AACA,MAAIC,aAAa,GAAG,MAAM;AACxBhB,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAc,IAAAA,MAAM,GAAGtC,WAAW,CAACwC,aAAZ,CAA0B,EAA1B,EAA8B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC1DnB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBc,MAAvB;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCiB,QAAzC;AAEAnC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAQ,MAAAA,gBAAgB,CAAC;AACfL,QAAAA,GAAG,EAAEF,eAAe,CAACE,GADN;AAEfC,QAAAA,GAAG,EAAEH,eAAe,CAACG,GAFN;AAGfC,QAAAA,GAAG,EAAEJ,eAAe,CAACI,GAHN;AAIfC,QAAAA,IAAI,EAAEL,eAAe,CAACK;AAJP,OAAD,CAAhB;AAMAJ,MAAAA,kBAAkB,CAAC;AACjBC,QAAAA,GAAG,EAAEgC,QAAQ,CAACd,MAAT,CAAgBC,QADJ;AAEjBlB,QAAAA,GAAG,EAAE+B,QAAQ,CAACd,MAAT,CAAgBE,SAFJ;AAGjBlB,QAAAA,GAAG,EAAE8B,QAAQ,CAACd,MAAT,CAAgBG,QAHJ;AAIjBlB,QAAAA,IAAI,EAAE6B,QAAQ,CAACV;AAJE,OAAD,CAAlB;AAMD,KAjBQ,CAAT;AAmBD,GArBD;;AA2BA,MAAIY,YAAY,GAAG,CAACC,IAAD,EAAYC,IAAZ,EAAuBC,IAAvB,EAAkCC,IAAlC,KAAgD;AACjE,QAAIC,CAAC,GAAG,IAAR,CADiE,CACnD;;AACd,QAAIC,IAAI,GAAGC,KAAK,CAAEJ,IAAI,GAAGF,IAAT,CAAhB;AACA,QAAIO,IAAI,GAAGD,KAAK,CAAEH,IAAI,GAAGF,IAAT,CAAhB;AACA,QAAIO,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,GAAG,CAAhB,IAAqBI,IAAI,CAACC,GAAL,CAASL,IAAI,GAAG,CAAhB,CAArB,GACNC,KAAK,CAACG,IAAI,CAACE,GAAL,CAASX,IAAT,CAAD,CAAL,GAAwBM,KAAK,CAACG,IAAI,CAACE,GAAL,CAAST,IAAT,CAAD,CAA7B,GACAO,IAAI,CAACC,GAAL,CAASH,IAAI,GAAG,CAAhB,CADA,GACqBE,IAAI,CAACC,GAAL,CAASH,IAAI,GAAG,CAAhB,CAFvB;AAGA,QAAIK,CAAC,GAAG,IAAIH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,IAAL,CAAUN,CAAV,CAAX,EAAyBC,IAAI,CAACK,IAAL,CAAU,IAAIN,CAAd,CAAzB,CAAZ;AACA,QAAIO,CAAC,GAAGX,CAAC,GAAGQ,CAAZ;;AACA,aAASN,KAAT,CAAeU,KAAf,EAA2B;AACzB;AACA,aAAOA,KAAK,GAAGP,IAAI,CAACQ,EAAb,GAAkB,GAAzB;AACD;AACD;;;AACA,QAAIC,cAAc,GAAGC,MAAM,CAACJ,CAAC,CAACK,OAAF,CAAU,CAAV,CAAD,CAA3B;AACA,WAAOF,cAAP;AACD,GAhBD;AAkBA;;;AACA,MAAIG,OAAO,GAAIC,CAAD,IAAY;AACxB,QAAIA,CAAC,GAAG,IAAR,EAAc;AACZA,MAAAA,CAAC,GAAG,MAAMA,CAAV;AACD;;AACD,WAAOA,CAAP;AACD,GALD;;AAOA,MAAIjC,WAAW,GAAIrB,IAAD,IAAe;AAE/B,QAAIuD,MAAM,GAAG,IAAIC,IAAJ,CAASxD,IAAT,CAAb;AACA,QAAI+C,CAAC,GAAGM,OAAO,CAACE,MAAM,CAACE,OAAP,EAAD,CAAf;AACA,QAAIC,CAAC,GAAGL,OAAO,CAAEE,MAAM,CAACI,QAAP,EAAD,GAAoB,CAArB,CAAf;AACA,QAAIC,CAAC,GAAGL,MAAM,CAACM,WAAP,EAAR;AACA,QAAIC,CAAC,GAAGT,OAAO,CAACE,MAAM,CAACQ,QAAP,EAAD,CAAf;AACA,QAAIC,GAAG,GAAGX,OAAO,CAACE,MAAM,CAACU,UAAP,EAAD,CAAjB;AACA,QAAIC,GAAG,GAAGb,OAAO,CAACE,MAAM,CAACY,UAAP,EAAD,CAAjB;AACA,QAAIC,KAAK,GAAGrB,CAAC,GAAG,GAAJ,GAAUW,CAAV,GAAc,GAAd,GAAoBE,CAApB,GAAwB,GAAxB,GAA8BE,CAA9B,GAAkC,GAAlC,GAAwCE,GAAxC,GAA8C,GAA9C,GAAoDE,GAAhE;AACAvD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBwD,KAAxB;AACA,WAAOA,KAAP;AACD,GAZD;;AAeA,MAAIC,YAAY,GAAG,CAACC,SAAD,EAAiBC,QAAjB,KAAmC;AACpD,QAAIvE,IAAI,GAAGuE,QAAQ,GAAGD,SAAtB;AACA,QAAIE,WAAW,GAAG,IAAIhB,IAAJ,CAASc,SAAT,CAAlB;AACA,QAAIG,UAAU,GAAG,IAAIjB,IAAJ,CAASe,QAAT,CAAjB;AACA,QAAIhB,MAAM,GAAG,IAAIC,IAAJ,CAASxD,IAAT,CAAb;AACA,QAAI8D,CAAC,GAAGT,OAAO,CAACE,MAAM,CAACQ,QAAP,EAAD,CAAP,GAA2B,CAAnC;AACA,QAAIC,GAAG,GAAGX,OAAO,CAACE,MAAM,CAACU,UAAP,EAAD,CAAjB;AACA,QAAIC,GAAG,GAAGb,OAAO,CAACE,MAAM,CAACY,UAAP,EAAD,CAAjB;AACA,QAAIC,KAAJ;;AACA,QAAIN,CAAC,IAAI,CAAT,EAAY;AACVM,MAAAA,KAAK,GAAGJ,GAAG,GAAG,GAAN,GAAYE,GAApB;AACD,KAFD,MAEO;AACLE,MAAAA,KAAK,GAAGN,CAAC,GAAG,GAAJ,GAAUE,GAAV,GAAgB,GAAhB,GAAsBE,GAA9B;AACD;;AAEDvD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B4D,WAA5B;AACA7D,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B6D,UAA3B;AACA9D,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkD,CAA3B,EAA8B,GAA9B,EAAmCE,GAAnC,EAAwC,GAAxC,EAA6CE,GAA7C;AACAvD,IAAAA,OAAO,CAACC,GAAR,CAAYwD,KAAZ;AACA,WAAOA,KAAP;AACD,GApBD;;AAsBA,MAAIM,WAAW,GAAG,MAAM;AACtB,QAAIC,CAAC,GAAGN,YAAY,CAAC,aAAD,EAAgB,aAAhB,CAApB;AACA1D,IAAAA,OAAO,CAACC,GAAR,CAAY+D,CAAC,GAAG,KAAhB;AACD,GAHD;;AAKA,MAAIC,QAAQ,GAAG,CAACC,QAAD,EAAgBC,MAAhB,KAAgC;AAE7C,QAAIC,GAAG,GAAG,CAACD,MAAM,GAAGD,QAAT,GAAoB,KAArB,EAA4BzB,OAA5B,CAAoC,CAApC,CAAV;AACAzC,IAAAA,OAAO,CAACC,GAAR,CAAYmE,GAAG,GAAG,OAAlB;AACA,WAAOA,GAAP;AAED,GAND;;AAOA,MAAIC,WAAW,GAAG,MAAM;AACtB,QAAIL,CAAC,GAAGC,QAAQ,CAAC,GAAD,EAAM,EAAN,CAAhB;AACAjE,IAAAA,OAAO,CAACC,GAAR,CAAY+D,CAAC,GAAG,QAAhB;AACD,GAHD;;AAKA,MAAIM,YAAJ;;AAEA,MAAIxF,aAAa,IAAI,IAArB,EAA2B;AACzBwF,IAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAItF,eAAe,CAACE,GAApB,OAA0BF,eAAe,CAACG,GAA1C,OAAgDH,eAAe,CAACK,IAAhE,CAAf;AACD,GAFD,MAGK;AACHiF,IAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4NAAf;AACD;;AACD,MAAIC,WAAJ;AACA,MAAIC,eAAJ;AAEA,MAAIC,SAAS,GAAG/D,WAAW,CAAChB,WAAW,CAACL,IAAb,CAA3B;AACA,MAAIqF,QAAQ,GAAGhE,WAAW,CAAC1B,eAAe,CAACK,IAAjB,CAA1B;AACA,MAAIsF,QAAQ,GAAGjB,YAAY,CAAChE,WAAW,CAACL,IAAb,EAAkBL,eAAe,CAACK,IAAlC,CAA3B;AACA,MAAI6E,QAAQ,GAAG9C,YAAY,CAAC9B,aAAa,CAACJ,GAAf,EAAoBI,aAAa,CAACH,GAAlC,EAAuCH,eAAe,CAACE,GAAvD,EAA2DF,eAAe,CAACG,GAA3E,CAA3B;;AAEA,MAAIL,aAAa,IAAI,IAArB,EAA2B,CAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,GAZD,MAYO;AACLyF,IAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4NAAd;AACD;;AAED,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,OAA/C;AAAuD,IAAA,IAAI,EAAC,OAA5D;AAAoE,IAAA,IAAI,EAAC,OAAzE;AAAiF,IAAA,OAAO,EAAEvD,aAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAA0B,IAAA,KAAK,EAAC,WAAhC;AAA4C,IAAA,KAAK,EAAC,OAAlD;AAA0D,IAAA,IAAI,EAAC,OAA/D;AAAuE,IAAA,IAAI,EAAC,OAA5E;AAAoF,IAAA,OAAO,EAAEJ,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAFF,CADF,CADF,EAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEgE,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGN,WAFH,EAGGC,eAHH,CADF,CADF,EASE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE5F,WAApB;AAAiC,IAAA,OAAO,EAAC,0EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAVF,CADF;AAwBD,CA/OD;;AAgPA,eAAeF,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { locate, laptop, time } from \"ionicons/icons\";\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\nimport { start } from 'repl';\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonIcon, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\r\nimport { RouteComponentProps, useHistory } from 'react-router';\r\nimport { strict } from 'assert';\r\nimport shareValue from \"../Models/share\";\r\n\r\n\r\nconst { Geolocation } = Plugins;\r\nconst Tab3: React.FC<RouteComponentProps> = (props) => {\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  const [positionReady, setPositionReady] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 0, lng: 0, acc: 0, time: 0 });\r\n  const [startPosition, setStartPosition] = useState({ lat: 0, lng: 0, acc: 0, time: 0 });\r\n  const [startReady, setStartReady] = useState(true);\r\n  const [startStatus, setStartStatus] = useState({ time: 0 });\r\n  const [totalDistance, setTotalDistance] = useState(0);\r\n\r\n\r\n\r\n  \r\n\r\n  useIonViewDidEnter(() => {\r\n    getDistance();\r\n\r\n  });\r\n\r\n\r\n\r\n  const startGetGPS = async () => {\r\n    console.log('Getting...startGetGPS');\r\n    setShowLoading(true);\r\n    let position1 = await Geolocation.getCurrentPosition();\r\n    setShowLoading(false);\r\n    setPositionReady(true);\r\n    setCurrentPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude,\r\n      acc: position1.coords.accuracy,\r\n      time: position1.timestamp\r\n    });\r\n\r\n    if (startReady == true) {\r\n      setStartStatus({\r\n        time: position1.timestamp\r\n      })\r\n      setStartPosition({\r\n        lat: position1.coords.latitude,\r\n        lng: position1.coords.longitude,\r\n        acc: position1.coords.accuracy,\r\n        time: position1.timestamp\r\n      })\r\n      setStartReady(false);\r\n    }\r\n    // let lat = position1.coords.latitude;\r\n    // let lng = position1.coords.longitude;\r\n    console.log('Current startGetGPS', startPosition.lat, startPosition.lng);\r\n    \r\n\r\n  }\r\n  const getDistance = async () => {\r\n    console.log('Getting geolocation....getDistance');\r\n    let position1 = await Geolocation.getCurrentPosition();\r\n    setPositionReady(true);\r\n    setCurrentPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude,\r\n      acc: position1.coords.accuracy,\r\n      time: position1.timestamp\r\n    });\r\n    let lat = position1.coords.latitude;\r\n    let lng = position1.coords.longitude;\r\n    let datetime = getDatetime(position1.timestamp);\r\n    alert(\"lat :\"+lat+\" lng :\"+lng+\" date :\"+ datetime);\r\n    }\r\n\r\n  let stopWatchGPS =(watchid:any) =>{\r\n  Geolocation.clearWatch(watchid);\r\n    \r\n\r\n  }\r\n  \r\n\r\n  \r\n  let watch1:string;\r\n  let startWatchGPS = () => {\r\n    console.log('Watching geolocation...startWatchGPS');\r\n    watch1 = Geolocation.watchPosition({}, (position, error) => {\r\n      console.log('watch1 :',watch1);\r\n      console.log('new position startWatchGPS',position);\r\n      \r\n      setPositionReady(true);\r\n      setStartPosition({\r\n        lat: currentPosition.lat,\r\n        lng: currentPosition.lng,\r\n        acc: currentPosition.acc,\r\n        time: currentPosition.time\r\n      })\r\n      setCurrentPosition({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n        acc: position.coords.accuracy,\r\n        time: position.timestamp\r\n      })\r\n    }\r\n    )\r\n  }\r\n   \r\n\r\n \r\n\r\n\r\n  let findDistance = (lat1: any, lon1: any, lat2: any, lon2: any) => {\r\n    let R = 6373; // km\r\n    let dLat = toRad((lat2 - lat1));\r\n    let dLon = toRad((lon2 - lon1));\r\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) *\r\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let d = R * c;\r\n    function toRad(Value: any) {\r\n      /** Converts numeric degrees to radians */\r\n      return Value * Math.PI / 180;\r\n    }\r\n    /* ทศนิยม 2 ตำแหน่ง */\r\n    let d_round_to_2nd = Number(d.toFixed(2));\r\n    return d_round_to_2nd;\r\n  };\r\n\r\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\r\n  let addZero = (i: any) => {\r\n    if (i < '10') {\r\n      i = \"0\" + i;\r\n    }\r\n    return i;\r\n  }\r\n\r\n  let getDatetime = (time: any) => {\r\n\r\n    let myDate = new Date(time);\r\n    let d = addZero(myDate.getDate());\r\n    let m = addZero((myDate.getMonth())+1);\r\n    let y = myDate.getFullYear();\r\n    let h = addZero(myDate.getHours());\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec\r\n    console.log('DateTime', times);\r\n    return times;\r\n  };\r\n   \r\n  \r\n  let durationtime = (timestart: any, timestop: any) => {\r\n    let time = timestop - timestart;\r\n    let mystartDate = new Date(timestart);\r\n    let mystopDate = new Date(timestop);\r\n    let myDate = new Date(time);\r\n    let h = addZero(myDate.getHours())-7;\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times;\r\n    if (h == 0) {\r\n      times = min + ':' + sec\r\n    } else {\r\n      times = h + ':' + min + ':' + sec\r\n    }\r\n    \r\n    console.log('Time Start :', mystartDate);\r\n    console.log('Time Stop :', mystopDate);\r\n    console.log('Diff Time :', h, ':', min, ':', sec);\r\n    console.log(times)\r\n    return times;\r\n  };\r\n\r\n  let calduration = () => {\r\n    let x = durationtime(1453467965439, 1585492636444);\r\n    console.log(x + \" น.\")\r\n  }\r\n\r\n  let calories = (distance: any, weight: any) => {\r\n\r\n    let cal = (weight * distance * 1.036).toFixed(2)\r\n    console.log(cal + \" Kcal\")\r\n    return cal;\r\n\r\n  };\r\n  let calCalories = () => {\r\n    let x = calories(308, 78);\r\n    console.log(x + \" Kcal.\")\r\n  }\r\n\r\n  let startTextJSX;\r\n\r\n  if (positionReady == true) {\r\n    startTextJSX = <p>{currentPosition.lat},{currentPosition.lng},{currentPosition.time}</p>\r\n  }\r\n  else {\r\n    startTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n  let stopTextJSX;\r\n  let distanceTextJSX;\r\n\r\n  let starttime = getDatetime(startStatus.time);\r\n  let stoptime = getDatetime(currentPosition.time);\r\n  let duration = durationtime(startStatus.time,currentPosition.time);\r\n  let distance = findDistance(startPosition.lat, startPosition.lng, currentPosition.lat,currentPosition.lng);\r\n  \r\n  if (positionReady == true) {\r\n\r\n\r\n    // stopTextJSX = <p>LastPosition = {startPosition.lat}<br></br>\r\n    //                 latitude = {startPosition.lng}<br></br>\r\n    //                 Time = {starttime}<br></br>\r\n    //                 CurrentPosition = {currentPosition.lat}<br></br>\r\n    //                 latitude = {currentPosition.lng}<br></br>\r\n    //                 timestamp = {stoptime}<br></br>\r\n    //                 duration = {duration}</p>\r\n\r\n    // distanceTextJSX = <p>totalDistance = {distance}</p>\r\n  } else {\r\n    stopTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n  \r\n  return (\r\n    <IonPage>\r\n      <IonHeader translucent={true}>\r\n        <IonToolbar>\r\n          <IonTitle>Easy Running#1</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton expand=\"full\" color=\"primary\" shape=\"round\" slot=\"start\" size=\"large\" onClick={startWatchGPS} >WatchGPS</IonButton>\r\n            <IonButton expand=\"block\" color=\"secondary\" shape=\"round\" slot=\"start\" size=\"large\" onClick={stopWatchGPS}>StopGPS</IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <body >\r\n          <div style={{ height: '90vh', width: '100%' }}>\r\n           \r\n            {stopTextJSX}\r\n            {distanceTextJSX}\r\n            \r\n          </div>\r\n        </body>\r\n        <IonLoading isOpen={showLoading} message=\"กำลังขอพิกัด\" />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\nexport default Tab3;"]},"metadata":{},"sourceType":"module"}