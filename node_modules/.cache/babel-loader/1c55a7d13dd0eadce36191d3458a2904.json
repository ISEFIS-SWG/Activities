{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pratyas/Documents/Mobile App Training/MymobileApp/TOTRun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pratyas/Documents/Mobile App Training/MymobileApp/TOTRun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/pratyas/Documents/Mobile App Training/MymobileApp/TOTRun/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{locate}from\"ionicons/icons\";import{Plugins}from\"@capacitor/core\";import GoogleMapReact from'google-map-react';import{IonPage,IonHeader,IonToolbar,IonTitle,IonButton,IonIcon,IonButtons,IonContent,IonLoading,useIonViewDidEnter}from'@ionic/react';var Geolocation=Plugins.Geolocation;var Tab4=function Tab4(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showLoading=_useState2[0],setShowLoading=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),positionReady=_useState4[0],setPositionReady=_useState4[1];var _useState5=useState({lat:0,lng:0,acc:0,time:0}),_useState6=_slicedToArray(_useState5,2),currentPosition=_useState6[0],setCurrentPosition=_useState6[1];var _useState7=useState({lat:0,lng:0,acc:0,time:0}),_useState8=_slicedToArray(_useState7,2),startPosition=_useState8[0],setStartPosition=_useState8[1];//const [distance, setDistance] = useState({ distance: 0 });\nvar onMapLoad=function onMapLoad(map,mapsAPI){var directionsService=new mapsAPI.DirectionsService();var directionsRenderer=new mapsAPI.DirectionsRenderer();directionsRenderer.setMap(map);// let start = { lat: 9.1106153, lng: 99.3018452 };\nvar start={lat:startPosition.lat,lng:startPosition.lng};//let end = { lat: 6.9506242, lng: 100.41277989999999 };\nvar end={lat:currentPosition.lat,lng:currentPosition.lng};var request={origin:start,destination:end,travelMode:'WALKING'};directionsService.route(request,function(result,status){if(status=='OK'){directionsRenderer.setDirections(result);var route=result.routes[0];var distance1;for(var i=0;i<route.legs.length;i++){console.log('directionService',route.legs[i].distance.text);distance1=route.legs[i].distance.text;}// setDistance({\n//   distance: distance1\n// })\n// console.log('Distance :', distance1);\nvar dis1=route.legs[route.legs.length-1].distance.value/1000;// distance : km.\nconsole.log(dis1+' km.');var weight=78;// kg.\nvar cal=weight*dis1*1.036;console.log(cal.toFixed(2)+\" Kcal\");}});var trafficLayer=new mapsAPI.TrafficLayer();};useIonViewDidEnter(function(){//startGetGPS();\n// startDistance();\n//GetLatLng();\n});var getDirection=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var position2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('Getting geolocation....');setShowLoading(true);_context.next=4;return Geolocation.getCurrentPosition();case 4:position2=_context.sent;setShowLoading(false);setPositionReady(true);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getDirection(){return _ref.apply(this,arguments);};}();var startGetGPS=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var position1,lat,lng,datetime;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Getting geolocation....startGetGPS');setShowLoading(true);_context2.next=4;return Geolocation.getCurrentPosition();case 4:position1=_context2.sent;setShowLoading(false);setPositionReady(true);setStartPosition({lat:position1.coords.latitude,lng:position1.coords.longitude,acc:position1.coords.accuracy,time:position1.timestamp});setCurrentPosition({lat:position1.coords.latitude,lng:position1.coords.longitude,acc:position1.coords.accuracy,time:position1.timestamp});lat=position1.coords.latitude;lng=position1.coords.longitude;datetime=new Date(position1.timestamp);console.log('Current startGetGPS',lat,lng);console.log('Start timestamp',new Date(startPosition.time));case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function startGetGPS(){return _ref2.apply(this,arguments);};}();var startDistance=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var position1,lat,lng;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log('Getting geolocation....startDistance');setShowLoading(true);_context3.next=4;return Geolocation.getCurrentPosition();case 4:position1=_context3.sent;setShowLoading(false);setPositionReady(true);setCurrentPosition({lat:position1.coords.latitude,lng:position1.coords.longitude,acc:position1.coords.accuracy,time:position1.timestamp});lat=position1.coords.latitude;lng=position1.coords.longitude;console.log('Start timestamp',new Date(startPosition.time));case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function startDistance(){return _ref3.apply(this,arguments);};}();var getDistance=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var position1,lat,lng,googleMap;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:console.log('Getting geolocation....getDistance');setShowLoading(true);_context4.next=4;return Geolocation.getCurrentPosition();case 4:position1=_context4.sent;setShowLoading(false);setPositionReady(true);setCurrentPosition({lat:position1.coords.latitude,lng:position1.coords.longitude,acc:position1.coords.accuracy,time:position1.timestamp});lat=position1.coords.latitude;lng=position1.coords.longitude;console.log('Stop timestamp',new Date(currentPosition.time),lat,lng);if(positionReady){googleMap=React.createElement(GoogleMapReact,{bootstrapURLKeys:{key:'AIzaSyATDm0MlJIxUXoIU56PIOk3aY26XXs6ul0'},defaultCenter:currentPosition,defaultZoom:15,yesIWantToUseGoogleMapApiInternals:true,onGoogleApiLoaded:function onGoogleApiLoaded(_ref5){var map=_ref5.map,maps=_ref5.maps;onMapLoad(map,maps);}});}case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function getDistance(){return _ref4.apply(this,arguments);};}();var watch1;var startWatchGPS=function startWatchGPS(){console.log('Watching geolocation...startWatchGPS');setShowLoading(true);watch1=Geolocation.watchPosition({},function(position,error){console.log('new position',position);setShowLoading(false);setPositionReady(true);setCurrentPosition({lat:position.coords.latitude,lng:position.coords.longitude,acc:position.coords.accuracy,time:position.timestamp});});};var GetLatLng=function GetLatLng(){var watch9;console.log('Watching geolocation...fn. GetLatLng');setShowLoading(true);watch9=Geolocation.watchPosition({},function(position9,error){console.log('new position',position9);setShowLoading(false);setPositionReady(true);// setStartPosition({\n//   lat: position9.coords.latitude,\n//   lng: position9.coords.longitude,\n//   acc: position9.coords.accuracy,\n//   time: position9.timestamp\n// })\nsetCurrentPosition({lat:position9.coords.latitude,lng:position9.coords.longitude,acc:position9.coords.accuracy,time:position9.timestamp});var lats=position9.coords.latitude;var lngs=position9.coords.longitude;var times=position9.timestamp;console.log('startPosition :',lats);console.log('currentPosition :',currentPosition.time);});};var findDistance=function findDistance(lat1,lon1,lat2,lon2){var R=6373;// km\nvar dLat=toRad(lat2-lat1);var dLon=toRad(lon2-lon1);var a=Math.sin(dLat/2)*Math.sin(dLat/2)+toRad(Math.cos(lat1))*toRad(Math.cos(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2);var c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));var d=R*c;function toRad(Value){/** Converts numeric degrees to radians */return Value*Math.PI/180;}console.log(\"ระยะทางได้ผลลัพธ์ = \"+d);return d;};var duration=function duration(timestart,timestop){var time=timestop-timestart;var myDate=new Date(time);var d=myDate.getDate();var m=myDate.getMonth();var y=myDate.getFullYear();var h=myDate.getHours();var min=myDate.getMinutes();var sec=myDate.getSeconds();var times=h+':'+min+':'+sec;console.log('Current',h,':',min,':',sec);console.log(times);return times;};var calduration=function calduration(){var x=duration(1453467965439,1585492636444);console.log(x+\" น.\");};var calories=function calories(distance,weight){var cal=(weight*distance*1.036).toFixed(2);console.log(cal+\" Kcal\");return cal;};var calCalories=function calCalories(){var x=calories(308,78);console.log(x+\" Kcal.\");};var startTextJSX;if(positionReady==true){startTextJSX=React.createElement(\"p\",null,currentPosition.lat,\",\",currentPosition.lng,\",\",currentPosition.time);}else{startTextJSX=React.createElement(\"p\",null,\"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");}var stopTextJSX;if(positionReady==true){stopTextJSX=React.createElement(\"p\",null,\"stopTextJSX longtitude = \",currentPosition.lat,React.createElement(\"br\",null),\"latitude = \",currentPosition.lng,React.createElement(\"br\",null),\"timestamp = \",currentPosition.time);}else{stopTextJSX=React.createElement(\"p\",null,\"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");}var googleMap;if(positionReady){googleMap=React.createElement(GoogleMapReact,{bootstrapURLKeys:{key:'AIzaSyATDm0MlJIxUXoIU56PIOk3aY26XXs6ul0'},defaultCenter:currentPosition,defaultZoom:15,yesIWantToUseGoogleMapApiInternals:true,onGoogleApiLoaded:function onGoogleApiLoaded(_ref6){var map=_ref6.map,maps=_ref6.maps;onMapLoad(map,maps);}});}return React.createElement(IonPage,null,React.createElement(IonHeader,{translucent:true},React.createElement(IonToolbar,null,React.createElement(IonTitle,null,\"Easy Running#1\"),React.createElement(IonButtons,{slot:\"end\"},React.createElement(IonButton,{onClick:getDirection},React.createElement(IonIcon,{icon:locate,slot:\"icon-only\"})),React.createElement(IonButton,{expand:\"full\",color:\"primary\",shape:\"round\",slot:\"start\",size:\"large\",onClick:function onClick(){GetLatLng();}},\"Start\"),React.createElement(IonButton,{expand:\"block\",color:\"secondary\",shape:\"round\",slot:\"start\",size:\"large\",onClick:getDistance},\"Stop\")))),React.createElement(IonContent,null,React.createElement(\"body\",null,React.createElement(\"div\",{style:{height:'90vh',width:'100%'}},stopTextJSX,googleMap)),React.createElement(IonLoading,{isOpen:showLoading,message:\"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E02\\u0E2D\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\"})));};export default Tab4;","map":{"version":3,"sources":["/Users/pratyas/Documents/Mobile App Training/MymobileApp/TOTRun/src/pages/Tab4.tsx"],"names":["React","useState","locate","Plugins","GoogleMapReact","IonPage","IonHeader","IonToolbar","IonTitle","IonButton","IonIcon","IonButtons","IonContent","IonLoading","useIonViewDidEnter","Geolocation","Tab4","props","showLoading","setShowLoading","positionReady","setPositionReady","lat","lng","acc","time","currentPosition","setCurrentPosition","startPosition","setStartPosition","onMapLoad","map","mapsAPI","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","start","end","request","origin","destination","travelMode","route","result","status","setDirections","routes","distance1","i","legs","length","console","log","distance","text","dis1","value","weight","cal","toFixed","trafficLayer","TrafficLayer","getDirection","getCurrentPosition","position2","startGetGPS","position1","coords","latitude","longitude","accuracy","timestamp","datetime","Date","startDistance","getDistance","googleMap","key","maps","watch1","startWatchGPS","watchPosition","position","error","GetLatLng","watch9","position9","lats","lngs","times","findDistance","lat1","lon1","lat2","lon2","R","dLat","toRad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI","duration","timestart","timestop","myDate","getDate","m","getMonth","y","getFullYear","h","getHours","min","getMinutes","sec","getSeconds","calduration","x","calories","calCalories","startTextJSX","stopTextJSX","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { locate, laptop, time } from \"ionicons/icons\";\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\nimport { start } from 'repl';\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonIcon, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\r\nimport { RouteComponentProps, useHistory } from 'react-router';\r\n\r\nconst { Geolocation } = Plugins;\r\nconst Tab4: React.FC<RouteComponentProps> = (props) => {\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  const [positionReady, setPositionReady] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 0, lng: 0, acc: 0, time: 0 });\r\n  const [startPosition, setStartPosition] = useState({ lat: 0, lng: 0, acc: 0, time: 0 });\r\n  //const [distance, setDistance] = useState({ distance: 0 });\r\n\r\n  let onMapLoad = (map: any, mapsAPI: any) => {\r\n    let directionsService = new mapsAPI.DirectionsService();\r\n    let directionsRenderer = new mapsAPI.DirectionsRenderer();\r\n    directionsRenderer.setMap(map)\r\n    // let start = { lat: 9.1106153, lng: 99.3018452 };\r\n    let start = { lat: startPosition.lat, lng: startPosition.lng };\r\n    //let end = { lat: 6.9506242, lng: 100.41277989999999 };\r\n    let end = { lat: currentPosition.lat, lng: currentPosition.lng };\r\n    let request = {\r\n      origin: start,\r\n      destination: end,\r\n      travelMode: 'WALKING'\r\n    };\r\n    directionsService.route(request, function (result: any, status: any) {\r\n\r\n      if (status == 'OK') {\r\n        directionsRenderer.setDirections(result);\r\n        let route = result.routes[0];\r\n\r\n        let distance1;\r\n        for (let i = 0; i < route.legs.length; i++) {\r\n          console.log('directionService', route.legs[i].distance.text)\r\n          distance1 = route.legs[i].distance.text;\r\n        }\r\n        // setDistance({\r\n        //   distance: distance1\r\n        // })\r\n        // console.log('Distance :', distance1);\r\n\r\n        let dis1 = route.legs[route.legs.length - 1].distance.value / 1000; // distance : km.\r\n        console.log(dis1 + ' km.')\r\n        let weight = 78 // kg.\r\n        let cal = weight * dis1 * 1.036\r\n        console.log(cal.toFixed(2) + \" Kcal\")\r\n      }\r\n    });\r\n    let trafficLayer = new mapsAPI.TrafficLayer();\r\n  }\r\n\r\n  useIonViewDidEnter(() => {\r\n    //startGetGPS();\r\n    // startDistance();\r\n      //GetLatLng();\r\n  });\r\n\r\n  const getDirection = async () => {\r\n    console.log('Getting geolocation....');\r\n    setShowLoading(true);\r\n    let position2 = await Geolocation.getCurrentPosition();\r\n    setShowLoading(false);\r\n    setPositionReady(true);\r\n  }\r\n  const startGetGPS = async () => {\r\n    console.log('Getting geolocation....startGetGPS');\r\n    setShowLoading(true);\r\n    let position1 = await Geolocation.getCurrentPosition();\r\n    setShowLoading(false);\r\n    setPositionReady(true);\r\n    setStartPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude,\r\n      acc: position1.coords.accuracy,\r\n      time: position1.timestamp\r\n    })\r\n    setCurrentPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude,\r\n      acc: position1.coords.accuracy,\r\n      time: position1.timestamp\r\n    });\r\n    let lat = position1.coords.latitude;\r\n    let lng = position1.coords.longitude;\r\n    let datetime = new Date(position1.timestamp);\r\n\r\n    console.log('Current startGetGPS', lat, lng);\r\n    console.log('Start timestamp', new Date(startPosition.time));\r\n\r\n  }\r\n  const startDistance = async () => {\r\n    console.log('Getting geolocation....startDistance');\r\n    setShowLoading(true);\r\n    let position1 = await Geolocation.getCurrentPosition();\r\n\r\n    setShowLoading(false);\r\n    setPositionReady(true);\r\n\r\n    setCurrentPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude,\r\n      acc: position1.coords.accuracy,\r\n      time: position1.timestamp\r\n    });\r\n\r\n    let lat = position1.coords.latitude;\r\n    let lng = position1.coords.longitude;\r\n\r\n    console.log('Start timestamp', new Date(startPosition.time));\r\n\r\n    \r\n  }\r\n  const getDistance = async () => {\r\n    console.log('Getting geolocation....getDistance');\r\n    setShowLoading(true);\r\n    let position1 = await Geolocation.getCurrentPosition();\r\n    setShowLoading(false);\r\n    setPositionReady(true);\r\n    setCurrentPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude,\r\n      acc: position1.coords.accuracy,\r\n      time: position1.timestamp\r\n    });\r\n    let lat = position1.coords.latitude;\r\n    let lng = position1.coords.longitude;\r\n    console.log('Stop timestamp', new Date(currentPosition.time), lat, lng);\r\n\r\n\r\n    let googleMap;\r\n    if (positionReady) {\r\n      googleMap = (\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyATDm0MlJIxUXoIU56PIOk3aY26XXs6ul0' }}\r\n          defaultCenter={currentPosition}\r\n          defaultZoom={15}\r\n          yesIWantToUseGoogleMapApiInternals\r\n          onGoogleApiLoaded={({ map, maps }) => { onMapLoad(map, maps) }} >\r\n        </GoogleMapReact>\r\n      )\r\n    }\r\n  }\r\n  let watch1;\r\n  let startWatchGPS = () => {\r\n    console.log('Watching geolocation...startWatchGPS');\r\n    setShowLoading(true);\r\n    watch1 = Geolocation.watchPosition({}, (position, error) => {\r\n      console.log('new position', position);\r\n      setShowLoading(false);\r\n      setPositionReady(true);\r\n      setCurrentPosition({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n        acc: position.coords.accuracy,\r\n        time: position.timestamp\r\n      })\r\n    }\r\n    );\r\n  }\r\n\r\n  let GetLatLng = () => {\r\n    let watch9\r\n    console.log('Watching geolocation...fn. GetLatLng');\r\n    setShowLoading(true);\r\n    watch9 = Geolocation.watchPosition({}, (position9, error) => {\r\n      console.log('new position', position9);\r\n      setShowLoading(false);\r\n      setPositionReady(true);\r\n    \r\n      \r\n        // setStartPosition({\r\n        //   lat: position9.coords.latitude,\r\n        //   lng: position9.coords.longitude,\r\n        //   acc: position9.coords.accuracy,\r\n        //   time: position9.timestamp\r\n        // })\r\n     \r\n\r\n      setCurrentPosition({\r\n        lat: position9.coords.latitude,\r\n        lng: position9.coords.longitude,\r\n        acc: position9.coords.accuracy,\r\n        time: position9.timestamp\r\n      });\r\n\r\n      let lats = position9.coords.latitude;\r\n      let lngs = position9.coords.longitude;\r\n      let times = position9.timestamp;\r\n      \r\n      console.log('startPosition :',lats);\r\n      console.log('currentPosition :',currentPosition.time);\r\n    })\r\n  }\r\n\r\n  let findDistance = (lat1: any, lon1: any, lat2: any, lon2: any) => {\r\n    var R = 6373; // km\r\n    var dLat = toRad((lat2 - lat1));\r\n    var dLon = toRad((lon2 - lon1));\r\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) *\r\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c;\r\n    function toRad(Value: any) {\r\n      /** Converts numeric degrees to radians */\r\n      return Value * Math.PI / 180;\r\n    }\r\n    console.log(\"ระยะทางได้ผลลัพธ์ = \" + d);\r\n    return d;\r\n  };\r\n\r\n  let duration = (timestart: any, timestop: any) => {\r\n    let time = timestop - timestart;\r\n    let myDate = new Date(time);\r\n    let d = myDate.getDate();\r\n    let m = myDate.getMonth();\r\n    let y = myDate.getFullYear();\r\n    let h = myDate.getHours()\r\n    let min = myDate.getMinutes()\r\n    let sec = myDate.getSeconds()\r\n    let times = h + ':' + min + ':' + sec\r\n    console.log('Current', h, ':', min, ':', sec);\r\n    console.log(times)\r\n    return times;\r\n  };\r\n\r\n  let calduration = () => {\r\n    let x = duration(1453467965439, 1585492636444);\r\n    console.log(x + \" น.\")\r\n  }\r\n\r\n  let calories = (distance: any, weight: any) => {\r\n\r\n    let cal = (weight * distance * 1.036).toFixed(2)\r\n    console.log(cal + \" Kcal\")\r\n    return cal;\r\n\r\n  };\r\n  let calCalories = () => {\r\n    let x = calories(308, 78);\r\n    console.log(x + \" Kcal.\")\r\n  }\r\n\r\n  let startTextJSX;\r\n\r\n  if (positionReady == true) {\r\n    startTextJSX = <p>{currentPosition.lat},{currentPosition.lng},{currentPosition.time}</p>\r\n  }\r\n  else {\r\n    startTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n  let stopTextJSX;\r\n\r\n\r\n  if (positionReady == true) {\r\n\r\n\r\n    stopTextJSX = <p>stopTextJSX longtitude = {currentPosition.lat}<br></br>latitude = {currentPosition.lng}<br></br>timestamp = {currentPosition.time}</p>\r\n  } else {\r\n    stopTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n  let googleMap;\r\n  if (positionReady) {\r\n    googleMap = (\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: 'AIzaSyATDm0MlJIxUXoIU56PIOk3aY26XXs6ul0' }}\r\n        defaultCenter={currentPosition}\r\n        defaultZoom={15}\r\n        yesIWantToUseGoogleMapApiInternals\r\n        onGoogleApiLoaded={({ map, maps }) => { onMapLoad(map, maps) }} >\r\n      </GoogleMapReact>\r\n    )\r\n  }\r\n  return (\r\n    <IonPage>\r\n      <IonHeader translucent={true}>\r\n        <IonToolbar>\r\n          <IonTitle>Easy Running#1</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton onClick={getDirection}>\r\n              <IonIcon icon={locate} slot=\"icon-only\"></IonIcon>\r\n            </IonButton>\r\n            <IonButton expand=\"full\" color=\"primary\" shape=\"round\" slot=\"start\" size=\"large\" onClick={()=>{\r\n              GetLatLng();\r\n              \r\n            }}>Start</IonButton>\r\n            <IonButton expand=\"block\" color=\"secondary\" shape=\"round\" slot=\"start\" size=\"large\" onClick={getDistance}>Stop</IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <body >\r\n          <div style={{ height: '90vh', width: '100%' }}>\r\n            {/* {startTextJSX} */}\r\n            {stopTextJSX}\r\n            {googleMap}\r\n            {/* {positionTextJSX} */}\r\n            {/* {googleMap}  */}\r\n            {/* {DistanceTextJSX} */}\r\n          </div>\r\n        </body>\r\n        <IonLoading isOpen={showLoading} message=\"กำลังขอพิกัด\" />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\nexport default Tab4;"]},"metadata":{},"sourceType":"module"}