{"ast":null,"code":"var _jsxFileName = \"/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx\";\nimport React, { useState } from 'react';\nimport { Plugins } from \"@capacitor/core\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\nconst {\n  Geolocation\n} = Plugins;\n\nconst Tab3 = props => {\n  const [showLoading, setShowLoading] = useState(false);\n  const [positionReady, setPositionReady] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [startPosition, setStartPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [startReady, setStartReady] = useState(true);\n  const [startStatus, setStartStatus] = useState({\n    time: '0'\n  });\n  const [totalDistance, setTotalDistance] = useState(0);\n  useIonViewDidEnter(() => {//getDistance();\n  });\n\n  const startGetGPS = async () => {\n    console.log('Getting...startGetGPS');\n    setShowLoading(true);\n    let position1 = await Geolocation.getCurrentPosition();\n    setShowLoading(false);\n    setPositionReady(true);\n    setCurrentPosition({\n      lat: position1.coords.latitude,\n      lng: position1.coords.longitude\n    });\n\n    if (startReady == true) {\n      setStartPosition({\n        lat: position1.coords.latitude,\n        lng: position1.coords.longitude\n      });\n      setStartReady(false);\n    } // let lat = position1.coords.latitude;\n    // let lng = position1.coords.longitude;\n\n\n    console.log('Current startGetGPS', startPosition.lat, startPosition.lng);\n  };\n\n  const getDistance = async () => {\n    let start_position = {\n      lat: 0,\n      lng: 0\n    };\n    console.log('**** getDistance ***');\n    let position1 = await Geolocation.getCurrentPosition().then(position => {\n      alert(position1);\n      setPositionReady(true);\n      setCurrentPosition({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      start_position = {\n        lat: lat,\n        lng: lng\n      };\n      alert(\"lat : \" + lat + \" lng : \" + lng);\n    }).catch(error => {\n      //console.log('ไม่สามารถหาพิกัดได้ :', error.message);\n      alert('ไม่สามารถหาพิกัดได้ :' + error.message);\n    });\n    console.log(\"Start Postion :\", start_position.lat, start_position.lng);\n  };\n\n  let findDistance = (position1, position2) => {\n    let R = 6373; // km\n\n    let lat1 = position1.lat;\n    let lng1 = position1.lng;\n    let lat2 = position2.lat;\n    let lng2 = position2.lng;\n    let dLat = toRad(lat2 - lat1);\n    let dLng = toRad(lng2 - lng1);\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    let d = R * c;\n\n    function toRad(Value) {\n      /** Converts numeric degrees to radians */\n      return Value * Math.PI / 180;\n    }\n    /* ทศนิยม 2 ตำแหน่ง */\n\n\n    let d_round_to_2nd = Number(d.toFixed(2)); //return d_round_to_2nd;\n\n    return d;\n  };\n\n  let stop_time;\n\n  let stopWatchGPS = () => {\n    Geolocation.clearWatch({\n      id: watch1\n    });\n    setPositionReady(true);\n  };\n\n  let totaldistance = 0;\n  let watch1;\n  let count = 0;\n  let sub_distance = 0;\n\n  let startWatchGPS = () => {\n    console.log(startStatus.time);\n    let position_1 = {\n      lat: 0,\n      lng: 0\n    }; // จุดถัดมาจากการ GetGPS from Device\n\n    let position_2 = {\n      lat: 0,\n      lng: 0\n    }; // จุดถัดมาจากการ GetGPS from Device\n\n    count = count + 1;\n    console.log('*** startWatchGPS **** :', count);\n    let countwatchpostion = 0;\n    watch1 = Geolocation.watchPosition({}, (position, error) => {\n      // {maximumAge:5000,timeout:5000}\n      console.log('WatchID :', watch1);\n      console.log('*** New Position ***', position, ' CountWatchPostion :', countwatchpostion);\n      setPositionReady(true);\n      position_2 = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      console.log('Position : ', position_1.lat, position_1.lng, position_2.lat, position_2.lng);\n\n      if (countwatchpostion > 1) {\n        sub_distance = sub_distance + findDistance(position_1, position_2);\n      }\n\n      console.log('Sub Distance : ', sub_distance);\n      position_1 = position_2;\n      countwatchpostion = countwatchpostion + 1;\n    });\n    console.log(\"Total Distacne :\", sub_distance);\n  };\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\n\n\n  let addZero = i => {\n    if (i < '10') {\n      i = \"0\" + i;\n    }\n\n    return i;\n  };\n\n  let getDatetime = time => {\n    let myDate = new Date();\n    myDate = new Date(time);\n    let d = addZero(myDate.getDate());\n    let m = addZero(myDate.getMonth() + 1);\n    let y = myDate.getFullYear();\n    let h = addZero(myDate.getHours());\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec;\n    return times;\n  };\n\n  let durationtime = (timestart, timestop) => {\n    let time = timestop - timestart;\n    let mystartDate = new Date(timestart);\n    let mystopDate = new Date(timestop);\n    let myDate = new Date(time);\n    let h = addZero(myDate.getHours()) - 7;\n    let min = addZero(myDate.getMinutes());\n    let sec = addZero(myDate.getSeconds());\n    let times;\n\n    if (h == 0) {\n      times = min + ':' + sec;\n    } else {\n      times = h + ':' + min + ':' + sec;\n    }\n\n    return times;\n  };\n\n  let calduration = () => {\n    let x = durationtime(1453467965439, 1585492636444);\n    console.log(x + \" น.\");\n  };\n\n  let calories = (distance, weight) => {\n    let cal = (weight * distance * 1.036).toFixed(2);\n    console.log(cal + \" Kcal\");\n    return cal;\n  };\n\n  let calCalories = () => {\n    let x = calories(308, 78);\n    console.log(x + \" Kcal.\");\n  };\n\n  let startTextJSX;\n\n  if (positionReady == true) {\n    startTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, currentPosition.lat, \",\", currentPosition.lng);\n  } else {\n    startTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  let stopTextJSX;\n  let distanceTextJSX; // let datetime = getDatetime(position1.timestamp);\n  //let duration = durationtime(startStatus.time, currentPosition.time);\n\n  if (positionReady == true) {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Start Time = \", startStatus.time, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), \"Stop Time =  \", stop_time, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })); // distanceTextJSX = <p>totalDistance = {distance}</p>\n  } else {\n    stopTextJSX = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"\\u0E01\\u0E14\\u0E1B\\u0E38\\u0E48\\u0E21\\u0E1A\\u0E19\\u0E02\\u0E27\\u0E32\\u0E40\\u0E1E\\u0E37\\u0E48\\u0E2D\\u0E23\\u0E30\\u0E1A\\u0E38\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\");\n  }\n\n  return React.createElement(IonPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(IonHeader, {\n    translucent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(IonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, React.createElement(IonTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, \"Easy Running#1\"), React.createElement(IonButtons, {\n    slot: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(IonButton, {\n    expand: \"full\",\n    color: \"primary\",\n    shape: \"round\",\n    slot: \"start\",\n    size: \"large\",\n    onClick: () => {\n      setStartStatus({\n        time: getDatetime(startStatus.time)\n      });\n      startWatchGPS();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"WatchGPS\"), React.createElement(IonButton, {\n    expand: \"block\",\n    color: \"secondary\",\n    shape: \"round\",\n    slot: \"start\",\n    size: \"large\",\n    onClick: () => {\n      stop_time = getDatetime('now');\n      console.log(stop_time);\n      stopWatchGPS();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"StopGPS\")))), React.createElement(IonContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: '90vh',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, stopTextJSX)), React.createElement(IonLoading, {\n    isOpen: showLoading,\n    message: \"\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E02\\u0E2D\\u0E1E\\u0E34\\u0E01\\u0E31\\u0E14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  })));\n};\n\nexport default Tab3;","map":{"version":3,"sources":["/Users/pratyas/Documents/MobileAppProject/MymobileApp/TOTRun/src/pages/Tab3.tsx"],"names":["React","useState","Plugins","IonPage","IonHeader","IonToolbar","IonTitle","IonButton","IonButtons","IonContent","IonLoading","useIonViewDidEnter","Geolocation","Tab3","props","showLoading","setShowLoading","positionReady","setPositionReady","currentPosition","setCurrentPosition","lat","lng","startPosition","setStartPosition","startReady","setStartReady","startStatus","setStartStatus","time","totalDistance","setTotalDistance","startGetGPS","console","log","position1","getCurrentPosition","coords","latitude","longitude","getDistance","start_position","then","position","alert","catch","error","message","findDistance","position2","R","lat1","lng1","lat2","lng2","dLat","toRad","dLng","a","Math","sin","cos","c","atan2","sqrt","d","Value","PI","d_round_to_2nd","Number","toFixed","stop_time","stopWatchGPS","clearWatch","id","watch1","totaldistance","count","sub_distance","startWatchGPS","position_1","position_2","countwatchpostion","watchPosition","addZero","i","getDatetime","myDate","Date","getDate","m","getMonth","y","getFullYear","h","getHours","min","getMinutes","sec","getSeconds","times","durationtime","timestart","timestop","mystartDate","mystopDate","calduration","x","calories","distance","weight","cal","calCalories","startTextJSX","stopTextJSX","distanceTextJSX","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { locate, laptop, time, alarmOutline, star } from \"ionicons/icons\";\r\nimport { Plugins } from \"@capacitor/core\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { RefresherEventDetail } from '@ionic/core';\r\nimport { start } from 'repl';\r\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonButton, IonIcon, IonButtons, IonContent, IonLoading, useIonViewDidEnter } from '@ionic/react';\r\nimport { RouteComponentProps, useHistory } from 'react-router';\r\nimport { strict } from 'assert';\r\nimport shareValue from \"../Models/share\";\r\n\r\n\r\nconst { Geolocation } = Plugins;\r\nconst Tab3: React.FC<RouteComponentProps> = (props) => {\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  const [positionReady, setPositionReady] = useState(false);\r\n  const [currentPosition, setCurrentPosition] = useState({ lat: 0, lng: 0 });\r\n  const [startPosition, setStartPosition] = useState({ lat: 0, lng: 0 });\r\n  const [startReady, setStartReady] = useState(true);\r\n  const [startStatus, setStartStatus] = useState({time:'0'});\r\n  const [totalDistance, setTotalDistance] = useState(0);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useIonViewDidEnter(() => {\r\n    //getDistance();\r\n\r\n  });\r\n\r\n\r\n\r\n  const startGetGPS = async () => {\r\n    console.log('Getting...startGetGPS');\r\n    setShowLoading(true);\r\n    let position1 = await Geolocation.getCurrentPosition();\r\n    setShowLoading(false);\r\n    setPositionReady(true);\r\n    setCurrentPosition({\r\n      lat: position1.coords.latitude,\r\n      lng: position1.coords.longitude\r\n    });\r\n\r\n    if (startReady == true) {\r\n    \r\n      setStartPosition({\r\n        lat: position1.coords.latitude,\r\n        lng: position1.coords.longitude\r\n        \r\n      })\r\n      setStartReady(false);\r\n    }\r\n    // let lat = position1.coords.latitude;\r\n    // let lng = position1.coords.longitude;\r\n    console.log('Current startGetGPS', startPosition.lat, startPosition.lng);\r\n\r\n\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  const getDistance = async () => {\r\n    let start_position = ({lat:0,lng:0})\r\n    console.log('**** getDistance ***');\r\n    let position1 = await Geolocation.getCurrentPosition().then((position) => {\r\n      alert(position1);\r\n      setPositionReady(true);\r\n      setCurrentPosition({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude\r\n      });\r\n      let lat = position.coords.latitude;\r\n      let lng = position.coords.longitude;\r\n      start_position = {\r\n          lat : lat,\r\n          lng : lng\r\n      };\r\n    alert(\"lat : \" + lat + \" lng : \" + lng);\r\n      })\r\n      .catch((error) => {\r\n        //console.log('ไม่สามารถหาพิกัดได้ :', error.message);\r\n        alert('ไม่สามารถหาพิกัดได้ :'+ error.message);\r\n      });\r\n\r\n      console.log(\"Start Postion :\" , start_position.lat,start_position.lng);\r\n  }\r\n\r\n  let findDistance = (position1:any,position2:any) => {\r\n    let R = 6373; // km\r\n\r\n    let lat1 = position1.lat;\r\n    let lng1 = position1.lng;\r\n    let lat2 = position2.lat;\r\n    let lng2 = position2.lng;\r\n\r\n    let dLat = toRad((lat2 - lat1));\r\n    let dLng = toRad((lng2 - lng1));\r\n    let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      toRad(Math.cos(lat1)) * toRad(Math.cos(lat2)) *\r\n      Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let d = R * c;\r\n    function toRad(Value: any) {\r\n      /** Converts numeric degrees to radians */\r\n      return Value * Math.PI / 180;\r\n    }\r\n    /* ทศนิยม 2 ตำแหน่ง */\r\n    let d_round_to_2nd = Number(d.toFixed(2));\r\n    //return d_round_to_2nd;\r\n    return d;\r\n  };\r\n  \r\n  let stop_time;\r\n  \r\n  let stopWatchGPS = () => {\r\n    Geolocation.clearWatch({id:watch1});\r\n    setPositionReady(true);\r\n    \r\n  }\r\n  \r\n  let totaldistance = 0;\r\n  let watch1: any;\r\n  let count = 0;\r\n  let sub_distance = 0;\r\n  \r\n  \r\n  let startWatchGPS = () => {\r\n    \r\n    \r\n    console.log(startStatus.time);\r\n\r\n    let position_1 =({lat:0,lng:0});  // จุดถัดมาจากการ GetGPS from Device\r\n    let position_2 =({lat:0,lng:0});  // จุดถัดมาจากการ GetGPS from Device\r\n    \r\n    count = count + 1;\r\n    console.log('*** startWatchGPS **** :',count);\r\n    \r\n    let countwatchpostion = 0;\r\n    watch1 = Geolocation.watchPosition({}, (position, error) => {\r\n    // {maximumAge:5000,timeout:5000}\r\n    \r\n    console.log('WatchID :',watch1);\r\n    console.log('*** New Position ***', position,' CountWatchPostion :',countwatchpostion);\r\n    \r\n    setPositionReady(true);\r\n    position_2 = ({\r\n      lat: position.coords.latitude,\r\n      lng: position.coords.longitude\r\n    });\r\n    console.log('Position : ',position_1.lat,position_1.lng,position_2.lat,position_2.lng)\r\n    if (countwatchpostion > 1) {\r\n      sub_distance = sub_distance + findDistance(position_1,position_2);\r\n    }\r\n    console.log('Sub Distance : ',sub_distance);\r\n    position_1 = position_2;\r\n    countwatchpostion = countwatchpostion+1;\r\n      \r\n    })\r\n    \r\n    console.log(\"Total Distacne :\",sub_distance);\r\n\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n  \r\n  /* เพิ่มเลขศูนย์หน้า วัน เดือน เวลา ที่เป็นเลขหลักเดียว */\r\n  let addZero = (i: any) => {\r\n    if (i < '10') {\r\n      i = \"0\" + i;\r\n    }\r\n    return i;\r\n  }\r\n\r\n  let getDatetime = (time: any) => {\r\n   \r\n    let myDate = new Date();\r\n     myDate = new Date(time);\r\n    let d = addZero(myDate.getDate());\r\n    let m = addZero((myDate.getMonth()) + 1);\r\n    let y = myDate.getFullYear();\r\n    let h = addZero(myDate.getHours());\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times = d + '-' + m + '-' + y + ' ' + h + ':' + min + ':' + sec\r\n  return times;\r\n  };\r\n\r\n  let durationtime = (timestart: any, timestop: any) => {\r\n    let time = timestop - timestart;\r\n    let mystartDate = new Date(timestart);\r\n    let mystopDate = new Date(timestop);\r\n    let myDate = new Date(time);\r\n    let h = addZero(myDate.getHours()) - 7;\r\n    let min = addZero(myDate.getMinutes());\r\n    let sec = addZero(myDate.getSeconds());\r\n    let times;\r\n    if (h == 0) {\r\n      times = min + ':' + sec\r\n    } else {\r\n      times = h + ':' + min + ':' + sec\r\n    }\r\n    return times;\r\n  };\r\n\r\n  let calduration = () => {\r\n    let x = durationtime(1453467965439, 1585492636444);\r\n    console.log(x + \" น.\")\r\n  }\r\n\r\n  let calories = (distance: any, weight: any) => {\r\n\r\n    let cal = (weight * distance * 1.036).toFixed(2)\r\n    console.log(cal + \" Kcal\")\r\n    return cal;\r\n\r\n  };\r\n  let calCalories = () => {\r\n    let x = calories(308, 78);\r\n    console.log(x + \" Kcal.\")\r\n  }\r\n\r\n  let startTextJSX;\r\n\r\n  if (positionReady == true) {\r\n    startTextJSX = <p>{currentPosition.lat},{currentPosition.lng}</p>\r\n  }\r\n  else {\r\n    startTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n  let stopTextJSX;\r\n  let distanceTextJSX;\r\n  \r\n  // let datetime = getDatetime(position1.timestamp);\r\n  //let duration = durationtime(startStatus.time, currentPosition.time);\r\n  \r\n\r\n  if (positionReady == true) {\r\n\r\n\r\n    stopTextJSX = <p>\r\n                    Start Time = {startStatus.time}<br></br>\r\n                    Stop Time =  {stop_time}<br></br>\r\n                     <br></br>\r\n                    </p>\r\n\r\n    // distanceTextJSX = <p>totalDistance = {distance}</p>\r\n  } else {\r\n    stopTextJSX = <p>กดปุ่มบนขวาเพื่อระบุพิกัดของเครื่อง</p>\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader translucent={true}>\r\n        <IonToolbar>\r\n          <IonTitle>Easy Running#1</IonTitle>\r\n          <IonButtons slot=\"end\">\r\n            <IonButton expand=\"full\" color=\"primary\" shape=\"round\" slot=\"start\" size=\"large\" onClick={()=>{\r\n              setStartStatus({time : getDatetime(startStatus.time)});\r\n              startWatchGPS();\r\n            }} >WatchGPS</IonButton>\r\n            <IonButton expand=\"block\" color=\"secondary\" shape=\"round\" slot=\"start\" size=\"large\" onClick={()=>{\r\n              stop_time = getDatetime('now');\r\n              console.log(stop_time);\r\n              stopWatchGPS();\r\n            }}>StopGPS</IonButton>\r\n          </IonButtons>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <body >\r\n          <div style={{ height: '90vh', width: '100%' }}>\r\n\r\n            {stopTextJSX}\r\n            \r\n\r\n          </div>\r\n        </body>\r\n        <IonLoading isOpen={showLoading} message=\"กำลังขอพิกัด\" />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\nexport default Tab3;"]},"metadata":{},"sourceType":"module"}